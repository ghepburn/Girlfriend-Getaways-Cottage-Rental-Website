{"version":3,"sources":["app/components/services/RestService.js","app/components/services/UserService.js","app/components/authentication/routes/AuthenticatedRoute.js","app/components/authentication/routes/AdminRoute.js","app/components/services/ConfigService.js","app/components/index/Navbar.js","app/components/index/Footer.js","app/components/index/Home.js","app/components/about/About.js","app/components/authentication/Register.js","app/components/services/ValidationService.js","app/components/authentication/Login.js","app/components/authentication/Logout.js","app/components/services/Account.js","app/components/services/AdminService.js","app/components/admin/users/EditUser.js","app/components/admin/users/User.js","app/components/admin/users/UserList.js","app/components/admin/getaways/Member.js","app/components/admin/getaways/Getaway.js","app/components/admin/getaways/GetawayList.js","app/components/admin/Admin.js","app/components/services/Availabillity.js","app/App.js","serviceWorker.js","index.js"],"names":["token","jwtToken","this","createJwtToken","axios","interceptors","request","use","config","headers","authorization","apiEndpoint","jsonData","post","get","put","authenticationApiEndpoint","authorizationApiEndpoint","registrationApiEndpoint","inMemoryToken","isAdmin","isEnabled","successMessage","failMessage","username","password","data","RestService","response","setupAxiosAuthenticationInterceptors","firstname","lastname","email","confirmPassword","AuthenticatedRoute","UserService","isUserLoggedIn","component","props","to","Component","AdminRoute","isAdminLoggedIn","setupAxiosInitialInterceptors","NavBar","state","showNav","toggleNav","bind","setState","id","Footer","Home","About","Register","firstName","lastName","showFailMessage","showSuccessMessage","showValdiationMessage","registerClicked","handleChange","e","target","name","value","createUser","then","catch","console","log","type","onChange","onClick","loginSuccessMessage","loginFailureMessage","paramLengthErrorMessage","confirmedPassword","Login","loginClicked","event","authenticateUser","loginUser","ValidationService","getLoginFailureMessage","getLoginSuccessMessage","Logout","logoutUser","Account","roleApiEndpoint","role","enabled","getEditRoleApiEndpoint","EditUser","makeUserAdmin","makeUserUser","disableUser","enableUser","AdminService","User","showEditUser","showEditUserRole","availableAction","display","authorityApiEndpoint","user","links","filter","link","rel","pop","href","editUser","UserList","users","map","Member","member","Getaway","booking","getaway","_links","members","details","startDate","endDate","bookedDate","numOfVehicles","numOfPets","desc","GetawayList","getaways","Admin","authorities","res","request_header","Availabillity","App","Navbar","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.32ecdc20.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass RestService {\r\n\r\n\tsetupAxiosAuthenticationInterceptors(token) {\r\n\t\tlet jwtToken = this.createJwtToken(token);\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers.authorization = jwtToken;\r\n                return config;\r\n            }\r\n        )\r\n    }\r\n\r\n\tsetupAxiosInitialInterceptors() {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers['Content-Type'] = \"application/json\";\r\n                return config;\r\n            }\r\n        )\r\n    }\r\n\r\n    post(apiEndpoint, jsonData) {\r\n    \treturn axios.post(apiEndpoint, jsonData);\r\n    }\r\n\r\n    get(apiEndpoint) {\r\n    \treturn axios.get(apiEndpoint);\r\n    }\r\n\r\n    put(apiEndpoint, jsonData) {\r\n        return axios.put(apiEndpoint, jsonData);\r\n    }\r\n\r\n\tcreateJwtToken(token) {\r\n\t\treturn \"Bearer \" + token;\r\n\t}\r\n\r\n}\r\n\r\nexport default new RestService();","import RestService from \"./RestService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nclass UserService {\r\n\r\n\tconstructor() {\r\n\t\tthis.authenticationApiEndpoint = \"/api/authenticate\";\r\n\t\tthis.authorizationApiEndpoint = \"/api/authorities\"\r\n\t\tthis.registrationApiEndpoint = \"/api/users\";\r\n\t\tthis.inMemoryToken = null;\r\n\t\tthis.isAdmin = false;\r\n\t\tthis.isEnabled = false;\r\n\t\tthis.successMessage = \"SUCCESS. You Are Logged In.\"\r\n\t\tthis.failMessage = \"Fail.  Please Try Again.\"\r\n\t}\r\n\r\n\tauthenticateUser(username, password) {\r\n\t\tlet data = {\"username\":username, \"password\":password};\r\n\t\treturn RestService.post(this.authenticationApiEndpoint, data);\r\n\t}\r\n\r\n\tloginUser(response) {\r\n\t\tthis.isEnabled = response.data[\"enabled\"] === \"true\";\r\n\t\tif (this.isEnabled) {\r\n\t\t\tthis.inMemoryToken = response.data[\"jwt\"];\r\n\t\t\tthis.isAdmin = response.data[\"admin\"] === \"true\";\r\n\t\t\tRestService.setupAxiosAuthenticationInterceptors(this.inMemoryToken);\r\n\t\t}\r\n\t}\r\n\r\n    logoutUser() {\r\n    \tthis.inMemoryToken = null;\r\n    \tthis.isAdmin = false;\r\n    }\r\n\r\n\tisUserLoggedIn() {\r\n\t\treturn this.inMemoryToken != null ? true : false;\r\n\t}\r\n\r\n\tisAdminLoggedIn() {\r\n\t\treturn this.isAdmin;\r\n\t}\r\n\r\n\tcreateUser(username, firstname, lastname, email, password, confirmPassword) {\r\n\t\tlet data = {\"username\": username, \"firstName\":firstname, \"lastName\":lastname, \"email\":email, \"password\":password, \"address\":{\"houseNumber\":\"\", \"street\":\"default\", \"town\":\"default\", \"postalCode\": \"default\", \"province\": \"Ontario\", \"country\": \"Canada\"}};\r\n\t\treturn RestService.post(this.registrationApiEndpoint, data);\r\n\t}\r\n\r\n\tgetSuccessMessage() {\r\n\t\treturn this.successMessage;\r\n\t}\r\n\r\n\tgetFailMessage() {\r\n\t\treturn this.failMessage;\r\n\t}\r\n\r\n}\r\n\r\nexport default new UserService();","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport UserService from \"../../services/UserService\";\r\n\r\n\r\nclass AuthenticatedRoute extends Component {\r\n\trender() {\r\n\r\n\t\tif (UserService.isUserLoggedIn()) {\r\n\t\t\treturn <Route component={this.props.component} />\t\r\n\t\t}  else {\r\n\t\t\treturn <Redirect to=\"/login\" />\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AuthenticatedRoute;","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport UserService from \"../../services/UserService\";\r\n\r\n\r\nclass AdminRoute extends Component {\r\n\trender() {\r\n\r\n\t\tif (UserService.isAdminLoggedIn()) {\r\n\t\t\treturn <Route component={this.props.component} />\t\r\n\t\t}  else {\r\n\t\t\treturn <Redirect to=\"/login\" />\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AdminRoute;","// import React from \"react\";\r\nimport RestService from \"./RestService\";\r\n\r\nclass ConfigService {\r\n\r\n\tinitialConfig() {\r\n\t\tRestService.setupAxiosInitialInterceptors();\r\n\t}\r\n\r\n}\r\n\r\nexport default new ConfigService();","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class NavBar extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowNav: false\r\n\t\t}\r\n\r\n\t\tthis.toggleNav = this.toggleNav.bind(this)\r\n\t}\r\n\r\n\ttoggleNav(){\r\n\t\tthis.setState(state => ({\r\n\t\t\tshowNav: !state.showNav\r\n\t\t}));\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<nav id=\"primary-nav\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t<li>Home</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/about\">\r\n\t\t\t\t\t\t<li>About</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/register\">\r\n\t\t\t\t\t\t<li>Register</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t<li>Login</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/logout\">\r\n\t\t\t\t\t\t<li>Logout</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/account\">\r\n\t\t\t\t\t\t<li>Account</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/admin\">\r\n\t\t\t\t\t\t<li>Admin</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/availabillity\">\r\n\t\t\t\t\t\t<li>Availabillity</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\r\n\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default NavBar","import React, { Component } from \"react\";\r\n\r\nexport class Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>Footer</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Footer","import React, { Component } from \"react\";\r\n\r\nexport class Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Home Page</h1><br></br>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nexport class About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>About Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nexport class Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: null,\r\n\t\t\tfirstName: null,\r\n\t\t\tlastName: null,\r\n\t\t\temail: null,\r\n\t\t\tpassword: null,\r\n\t\t\tconfirmPassword: null,\r\n\r\n\t\t\tshowFailMessage: false,\r\n\t\t\tshowSuccessMessage: false,\r\n\t\t\tshowValdiationMessage: false\r\n\r\n\t\t}\r\n\r\n\t\tthis.registerClicked = this.registerClicked.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tregisterClicked() {\r\n\t\t// // Validate user information\r\n\t\t// registeringUser = ValidationService.validateUserRegistration(this.state.username, this.state.firstName, this.state.lastName, this.state.email, this.state.password, this.state.confirmPassword);\r\n\t\t// if (registeringUser.isValidated()) {\r\n\r\n\t\t// \t// create & login user\r\n\t\t// \tUserService.registerUser(registeringUser)\r\n\t\t// \t.then().catch()\r\n\t\t// } else {\r\n\r\n\t\t// \t// display errors\r\n\t\t// \tthis.setState({errorMessages: registeringUser.getErrors()});\r\n\t\t// \tthis.setState({showErrorMessages: true});\r\n\t\t// }\r\n\r\n\t\t// POST to create new user\r\n\t\tUserService.createUser(this.state.username, this.state.firstName, this.state.lastName, this.state.email, this.state.password, this.state.confirmPassword)\r\n\t\t.then((response) => {\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t\tthis.setState({showFailMessage:false});\r\n\t\t}).catch(() => {\r\n\t\t\tthis.setState({showSuccessMessage:false});\r\n\t\t\tthis.setState({showFailMessage:true});\r\n\t\t\tconsole.log(\"Failed User Creation\");\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst failMessage = this.state.showFailMessage ? \"FAILED\" : \"\";\r\n\t\tconst successMessage = this.state.showSuccessMessage ? \"SUCCESS\" : \"\";\r\n\t\t// const validationMessage = this.state.showValdiationMessage ? : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Register Page</h1>\r\n\r\n\t\t\t\t<br />{failMessage}{successMessage}<br />\r\n\r\n\t\t\t\tUsername: <br />\r\n\t\t\t\t<input type=\"text\" name=\"username\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\tFirst Name: <br />\r\n\t\t\t\t<input type=\"text\" name=\"firstName\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\tLast Name: <br />\r\n\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\tEmail: <br />\r\n\t\t\t\t<input type=\"text\" name=\"email\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\tPassword: <br />\r\n\t\t\t\t<input type=\"text\" name=\"password\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\tConfirm Password: <br />\r\n\t\t\t\t<input type=\"text\" name=\"confirmPassword\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t<button onClick={this.registerClicked}>Register</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Register;","\r\n\r\nclass ValidationService {\r\n\r\n\tconstructor() {\r\n\t\tthis.loginSuccessMessage = \"You Are Logged In!\";\r\n\t\tthis.loginFailureMessage = \"Login Incomplete. Please check your username and password and try again.\"\r\n\t\tthis.paramLengthErrorMessage = \"character length error\"\r\n\t\r\n\t}\r\n\r\n\tvalidateUserRegistration(username, firstname, lastname, email, password, confirmedPassword) {\r\n\t\t\r\n\r\n\t}\r\n\r\n\tgetLoginSuccessMessage() {\r\n\t\treturn this.loginSuccessMessage;\r\n\t}\t\r\n\r\n\tgetLoginFailureMessage() {\r\n\t\treturn this.loginFailureMessage;\r\n\t}\r\n\r\n}\r\n\r\nexport default new ValidationService();","import React, { Component } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport ValidationService from \"../services/ValidationService\";\r\n\r\nexport class Login extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: null,\r\n\t\t\tpassword: null,\r\n\t\t\tshowFailMessage: false,\r\n\t\t\tshowSuccessMessage: false\r\n\t\t};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.loginClicked = this.loginClicked.bind(this);\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({[event.target.name]: event.target.value});\r\n\t}\r\n\r\n\tloginClicked() {\r\n\t\tUserService.authenticateUser(this.state.username, this.state.password)\r\n\t\t.then((response)=>{\r\n\t\t\tUserService.loginUser(response);\r\n\t\t\tthis.setState({showFailMessage: false});\r\n\t\t\tthis.setState({showSuccessMessage: true});\r\n\t\t}).catch(()=>{\r\n\t\t\tthis.setState({showFailMessage: true});\r\n\t\t\tthis.setState({showSuccessMessage: false});\r\n\t\t})\t\t\t\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst failMessage = this.state.showFailMessage ? ValidationService.getLoginFailureMessage() : \" \";\r\n\t\tconst successMessage = this.state.showSuccessMessage ? ValidationService.getLoginSuccessMessage() : \" \";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Login Page</h2>\r\n\t\t\t\t{failMessage}\r\n\t\t\t\t{successMessage}\r\n\t\t\t\t<br />\r\n\t\t\t\tUsername:\r\n\t\t\t\t<input type=\"text\" name=\"username\" onChange={this.handleChange} /><br />\r\n\t\t\t\tPassword:\r\n\t\t\t\t<input type=\"text\" name=\"password\" onChange={this.handleChange} /><br />\r\n\t\t\t\t<button onClick={this.loginClicked}>Login</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport class Logout extends Component {\r\n\trender() {\r\n\r\n\t\tUserService.logoutUser();\r\n\t\treturn <Redirect to=\"/\" />\r\n\r\n\t}\r\n};\r\n\r\nexport default Logout;","import React, { Component } from \"react\";\r\n\r\nexport class Account extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>Account Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Account;","import RestService from \"./RestService\";\r\n\r\nclass AdminService {\r\n\r\n\tconstructor() {\r\n\t\tthis.roleApiEndpoint = \"/api/authorities/\"\r\n\t}\r\n\r\n\tgetEditRoleApiEndpoint(username) {\r\n\t\treturn this.roleApiEndpoint + username;\r\n\t}\r\n\r\n\tmakeUserAdmin(username, role, enabled) {\r\n\t\tif (role != \"ROLE_ADMIN\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": \"ROLE_ADMIN\", \"enabled\":enabled}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeUserUser(username, role, enabled) {\r\n\t\tif (role != \"ROLE_USER\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": \"ROLE_USER\", \"enabled\":enabled}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tdisableUser(username, role, enabled) {\r\n\t\tif (enabled == \"true\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": role, \"enabled\":\"false\"}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tenableUser(username, role, enabled) {\r\n\t\tif (enabled == \"false\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": role, \"enabled\":\"true\"}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default new AdminService();","import React, { Component } from \"react\";\r\nimport AdminService from \"../../services/AdminService\";\r\n\r\nclass EditUser extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tfirstName:\"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\temail:\"\",\r\n\t\t\trole:\"\",\r\n\t\t\tenabled: \"\",\r\n\r\n\t\t\tshowSuccessMessage: false,\r\n\t\t\tsuccessMessage: \"Change Made Successfully!\"\r\n\t\t}\r\n\r\n\t\tthis.makeUserAdmin = this.makeUserAdmin.bind(this);\r\n\t\tthis.makeUserUser = this.makeUserUser.bind(this);\r\n\t\tthis.disableUser = this.disableUser.bind(this);\r\n\t\tthis.enableUser = this.enableUser.bind(this);\r\n\t}\r\n\r\n\tmakeUserAdmin() {\r\n\t\tAdminService.makeUserAdmin(this.props.role.username, this.props.role.role, this.props.role.enabled)\r\n\t\t.then(()=>{\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\tmakeUserUser() {\r\n\t\tAdminService.makeUserUser(this.props.role.username, this.props.role.role, this.props.role.enabled)\r\n\t\t.then(()=>{\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\tdisableUser() {\r\n\t\tAdminService.disableUser(this.props.role.username, this.props.role.role, this.props.role.enabled)\r\n\t\t.then(()=>{\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\tenableUser() {\r\n\t\tAdminService.enableUser(this.props.role.username, this.props.role.role, this.props.role.enabled)\r\n\t\t.then(()=>{\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst successMessage = this.state.showSuccessMessage ? <tr><td>{this.state.successMessage}</td></tr> : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{successMessage}\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><button onClick={this.makeUserAdmin}>Make Admin</button></td>\r\n\t\t\t\t\t<td><button onClick={this.makeUserUser}>Make User</button></td>\r\n\t\t\t\t\t<td><button onClick={this.disableUser}>Disable</button></td>\r\n\t\t\t\t\t<td><button onClick={this.enableUser}>Enable</button></td>\r\n\t\t\t\t</tr>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default EditUser;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport EditUser from \"./EditUser\";\r\n\r\n\r\nclass User extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trole:\"\",\r\n\t\t\tenabled:\"\",\r\n\t\t\tshowEditUser: false,\r\n\t\t\tshowEditUserRole: false,\r\n\t\t\tavailableAction: \"Edit\",\r\n\t\t\tdisplay: false\r\n\t\t}\r\n\r\n\t\tthis.showEditUser = this.showEditUser.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst authorityApiEndpoint = this.props.user.links.filter(link => link.rel == \"authority\").pop().href;\r\n\t\taxios.get(authorityApiEndpoint)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.setState({role:response.data.role});\r\n\t\t\tthis.setState({enabled:response.data.enabled});\r\n\t\t})\r\n\t}\r\n\r\n\tshowEditUser() {\r\n\t\tif (this.state.showEditUser) {\r\n\t\t\tthis.setState({availableAction:\"Edit\"});\r\n\t\t} else {\r\n\t\t\tthis.setState({availableAction:\"Close\"});\r\n\t\t} this.setState({showEditUser: !this.state.showEditUser});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst editUser = this.state.showEditUser ? <EditUser user={this.props.user} role={this.state.role} /> : \" \";\r\n\t\t// const cssDisplay = this.state.display ? \"display: block\" : \"display: none\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{this.props.user.username}</td>\r\n\t\t\t\t\t<td>{this.props.user.firstName}</td>\r\n\t\t\t\t\t<td>{this.props.user.lastName}</td>\r\n\t\t\t\t\t<td>{this.props.user.email}</td>\r\n\t\t\t\t\t<td>{this.state.role}</td>\r\n\t\t\t\t\t<td><button onClick={this.showEditUser}>{this.state.availableAction}</button></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{editUser}\r\n\t\t\t</div>\r\n\t\t\t// <div style={cssDisplay}>\r\n\t\t\t// \t<EditUser user={this.props.user} role={this.state.role} />\r\n\t\t\t// </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport User from \"./User\";\r\n\r\nexport class UserList extends Component {\r\n\trender() {\r\n\r\n\t\tconst users = this.props.users.map(user => \r\n\t\t\t\t<User user={user} />\r\n\t\t\t); \r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Username</th>\r\n\t\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Role</th>\r\n\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{users}\r\n\t\t\t\t</body>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default UserList;","import React, { Component } from \"react\";\r\n\r\nclass Member extends Component{\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{this.props.member.firstName}</td>\r\n\t\t\t\t<td>{this.props.member.lastName}</td>\r\n\t\t\t\t<td>{this.props.member.email}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Member;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Member from \"./Member\";\r\n\r\nclass Getaway extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbooking: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get(this.props.getaway._links.booking.href)\r\n\t\t\t.then((response) => this.setState( {booking: response.data} )\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst members = this.props.getaway.details.members.map(member => \r\n\t\t\t\t<Member member={member} />\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{this.state.booking.startDate}</td>\r\n\t\t\t\t<td>{this.state.booking.endDate}</td>\r\n\t\t\t\t<td>{this.state.booking.bookedDate}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.numOfVehicles}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.numOfPets}</td>\r\n\t\t\t\t<td>{members}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.desc}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Getaway;","import React, { Component } from \"react\";\r\nimport Getaway from \"./Getaway\";\r\n\r\nexport class GetawayList extends Component {\r\n\trender() {\r\n\r\n\t\tconst getaways = this.props.getaways.map(getaway => \r\n\t\t\t\t<Getaway getaway={getaway} />\r\n\t\t\t); \r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Start Date</th>\r\n\t\t\t\t\t\t<th>End Date</th>\r\n\t\t\t\t\t\t<th>Booked Date</th>\r\n\t\t\t\t\t\t<th>numOfVehicles</th>\r\n\t\t\t\t\t\t<th>numOfCars</th>\r\n\t\t\t\t\t\t<th>Members</th>\r\n\t\t\t\t\t\t<th>desc</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{getaways}\r\n\t\t\t\t</body>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default GetawayList;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserList from \"./users/UserList\";\r\nimport GetawayList from \"./getaways/GetawayList\";\r\n\r\nexport class Admin extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusers: [],\r\n\t\t\tgetaways: [],\r\n\t\t\tauthorities: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst usersApiEndpoint = \"/api/users\";\r\n\t\t// const getawaysApiEndpoint = \"/api/getaways\"\r\n\t\t// const authorityApiEndpoint = \"/api/authorities\"\r\n\t\taxios.get(usersApiEndpoint)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({users: response.data});\r\n\t\t\t});\r\n\t\taxios.interceptors.response.use(res=>{console.log(res.request_header)});\r\n\t\t// axios.get(getawaysApiEndpoint)\r\n\t\t// \t.then((response) => this.setState({getaways: response.data._embedded.getaways}));\r\n\t\t// axios.get(authorityApiEndpoint)\r\n\t\t// \t.then((response) => this.setState({authorities: response.data._embedded.authorities}));\t\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const users = this.state.users.map(user => <p>{users.firstName}</p>);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<h1>Admin Page</h1>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Active Users Baby</h3>\r\n\t\t\t\t\t<UserList users={this.state.users}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t// <div>\r\n\t\t\t\t// \t<h3>Getaways</h3>\r\n\t\t\t\t// \t<GetawayList getaways={this.state.getaways} />\r\n\t\t\t\t// </div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Admin;","import React, { Component } from \"react\";\r\n\r\nexport class Availabillity extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>Availabillity Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Availabillity;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nimport AuthenticatedRoute from \"./components/authentication/routes/AuthenticatedRoute\";\nimport AdminRoute from \"./components/authentication/routes/AdminRoute\";\nimport ConfigService from \"./components/services/ConfigService\";\n\nimport Navbar from \"./components/index/Navbar\";\nimport Footer from \"./components/index/Footer\";\nimport Home from \"./components/index/Home\";\nimport About from './components/about/About';\nimport Registration from \"./components/authentication/Register\";\nimport Login from \"./components/authentication/Login\";\nimport Logout from \"./components/authentication/Logout\";\nimport Account from \"./components/services/Account.js\";\nimport Admin from \"./components/admin/Admin.js\";\nimport Availabillity from \"./components/services/Availabillity.js\";\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    // ConfigService.initialConfig();\n  }\n\n  render() {\n    return (\n\n                <Router>\n                        \n                  <header>\n                    <Navbar />\n                  </header>\n\n                  <Switch>\n                    \n                    <Route path=\"/about\">\n                      <About />\n                    </Route>\n\n                    <Route path=\"/availabillity\">\n                      <Availabillity />\n                    </Route>\n\n                    <Route path=\"/register\">\n                      <Registration />\n                    </Route>\n\n                    <Route path=\"/login\">\n                      <Login />\n                    </Route>\n\n                    <Route path=\"/logout\">\n                      <Logout />\n                    </Route>\n\n                    <AuthenticatedRoute component={Account} path=\"/account\">\n                      <Account />\n                    </AuthenticatedRoute>\n\n                    <AdminRoute component={Admin} path=\"/admin\">\n                      <Admin />\n                    </AdminRoute>   \n\n                    <Route path=\"/\">\n                      <Home />\n                    </Route>\n\n                  </Switch>\n\n                  <footer>\n                    <Footer />\n                  </footer>                  \n\n                </Router>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}