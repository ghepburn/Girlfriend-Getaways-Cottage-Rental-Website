{"version":3,"sources":["app/components/context/UserContext.js","app/components/authentication/routes/AuthenticatedRoute.js","app/components/authentication/routes/AdminRoute.js","app/components/authentication/routes/AnonymousRoute.js","app/components/services/RestService.js","app/components/context/User.js","app/components/services/ConfigService.js","app/components/services/AuthService.js","app/components/index/navs/AuthenticatedNavs.js","app/components/index/navs/AnonymousNavs.js","app/components/index/navs/AdminNavs.js","app/components/index/Navbar.js","app/components/index/Footer.js","app/components/context/Notification.js","app/components/index/Home.js","app/components/about/About.js","app/components/services/NotificationService.js","app/components/services/ValidationService.js","app/components/authentication/registration/RegistrationForm.js","app/components/authentication/registration/Register.js","app/components/authentication/login/LoginForm.js","app/components/authentication/login/Login.js","app/components/authentication/Logout.js","app/components/account/settings/BasicUserSettings.js","app/components/account/settings/UserSettings.js","app/components/account/getaways/UserGetawayList.js","app/components/services/UserService.js","app/components/account/Account.js","app/components/services/AdminService.js","app/components/admin/users/EditUser.js","app/components/admin/users/User.js","app/components/admin/users/UserList.js","app/components/admin/getaways/Member.js","app/components/admin/getaways/Getaway.js","app/components/admin/getaways/GetawayList.js","app/components/admin/Admin.js","app/components/availabillity/Availabillity.js","app/components/notifications/NotificationBar.js","app/components/context/NotificationContext.js","app/components/Main.js","app/App.js","serviceWorker.js","index.js"],"names":["UserContext","React","createContext","AuthenticatedRoute","this","context","user","loginUser","logoutUser","getIsUserLoggedIn","props","component","to","Component","contextType","AdminRoute","getIsAdminLoggedIn","AnonymousRoute","token","jwtToken","createJwtToken","axios","interceptors","request","use","config","headers","authorization","apiEndpoint","jsonData","post","get","then","response","catch","error","console","log","message","put","User","RestService","setupAxiosInitialInterceptors","username","isAdmin","setUsername","setIsAdminLoggedIn","setToken","setIsUserLoggedIn","isUserLoggedIn","aBoolean","isAdminLoggedIn","AuthService","password","data","authenticationApiEndpoint","loginFunc","isEnabled","getUsername","setupAxiosAuthenticationInterceptors","logoutFunc","state","inMemoryToken","url","usernameExistsApiEndpoint","firstname","lastname","email","confirmPassword","registrationApiEndpoint","successMessage","failMessage","authorizationApiEndpoint","AuthenticatedNavs","AnonymousNavs","AdminNavs","Navbar","remainingNavs","adminNavs","id","Footer","Notification","action","ttl","setMessage","setAction","setTTL","isNotification","Home","createNotification","bind","notification","getIsNotification","removeNotification","currentUser","sendNotification","onClick","About","NotificationService","successAction","failedAction","ValidationService","inputName","inputValue","toLowerCase","validateUsername","validateFirstName","validateLastName","validateEmail","validatePassword","validateHouseNumber","validateStreet","validateTown","validatePostalCode","validateProvince","validateCountry","userName","errors","length","firstName","lastName","includes","houseNumber","street","town","postalCode","province","country","input","inputError","Register","usernameErrors","firstNameErrors","lastNameErrors","emailErrors","passwordErrors","confirmPasswordErrors","handleChange","registerClicked","disableButton","e","name","target","setState","value","getErrors","validatePasswordMatch","stateName","isValid","generalErrors","type","onChange","showRedirect","usernameExists","createUser","getSuccessfulRegistrationNotification","getFailedRegistrationNotification","RegistrationForm","LoginForm","loginClicked","event","Login","authenticateUser","getSuccessfulLoginNotification","getFailedLoginNotification","redirect","Logout","getLogoutNotification","BasicUserSettings","houseNumberErrors","streetErrors","townErrors","postalCodeErrors","defaultValue","address","saveClicked","UserSettings","UserGetawayList","UserService","usersApiEndpoint","Account","showUserSettings","showUserGetaways","getUserByUsername","currentState","userSettings","userGetaways","roleApiEndpoint","userRole","userEnabled","userAuthorityApiEndpoint","getEditRoleApiEndpoint","role","enabled","EditUser","showSuccessMessage","makeUserAdmin","makeUserUser","disableUser","enableUser","AdminService","updateAuthorityState","showEditUser","showEditUserRole","availableAction","display","getUserAuthority","responseEnabled","editUser","UserList","users","map","Member","member","Getaway","booking","getaway","_links","href","members","details","startDate","endDate","bookedDate","numOfVehicles","numOfPets","desc","GetawayList","getaways","Admin","authorities","getAllUsers","Availabillity","NotificationBar","history","listen","location","getTTL","showNotification","getMessage","withRouter","Main","path","App","Fragment","Provider","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gSAIeA,EAFKC,IAAMC,gBCGpBC,E,uKAGK,IAAD,EACgCC,KAAKC,QAArCC,EADA,EACAA,KADA,EACMC,UADN,EACiBC,WACzB,OAAIF,EAAKG,oBACD,kBAAC,IAAD,iBAAWL,KAAKM,MAAhB,CAAuBC,UAAWP,KAAKM,MAAMC,aAE7C,kBAAC,IAAD,CAAUC,GAAG,e,GARUC,aAA3BV,EACEW,YAAcd,EAYPG,QCbTY,E,uKAGK,IAAD,EACgCX,KAAKC,QAArCC,EADA,EACAA,KADA,EACMC,UADN,EACiBC,WACzB,OAAIF,EAAKU,qBACD,kBAAC,IAAD,iBAAWZ,KAAKM,MAAhB,CAAuBC,UAAWP,KAAKM,MAAMC,aAE7C,kBAAC,IAAD,CAAUC,GAAG,e,GAREC,aAAnBE,EACED,YAAcd,EAYPe,QCbTE,E,uKAGK,IAAD,EACgCb,KAAKC,QAArCC,EADA,EACAA,KADA,EACMC,UADN,EACiBC,WACzB,OAAKF,EAAKG,oBAGF,kBAAC,IAAD,CAAUG,GAAG,MAFb,kBAAC,IAAD,iBAAWR,KAAKM,MAAhB,CAAuBC,UAAWP,KAAKM,MAAMC,iB,GAN1BE,aAAvBI,EACEH,YAAcd,EAYPiB,Q,iBCyBA,M,6HAvCuBC,GACpC,IAAIC,EAAWf,KAAKgB,eAAeF,GAC7BG,IAAMC,aAAaC,QAAQC,KACvB,SAACC,GAEG,OADAA,EAAOC,QAAQC,cAAgBR,EACxBM,O,sDAMfJ,IAAMC,aAAaC,QAAQC,KACvB,SAACC,GAEG,OADAA,EAAOC,QAAQ,gBAAkB,mBAC1BD,O,2BAKdG,EAAaC,GACjB,OAAOR,IAAMS,KAAKF,EAAaC,K,0BAG5BD,GACH,OAAOP,IAAMU,IAAIH,GACbI,MAAK,SAACC,GAAY,OAAOA,KACzBC,OAAM,SAACC,GAASC,QAAQC,IAAIF,EAAMG,c,0BAGnCV,EAAaC,GACb,OAAOR,IAAMkB,IAAIX,EAAaC,K,qCAGtBX,GACd,MAAO,UAAYA,M,MCeNsB,GC1CA,I,wGALbC,EAAYC,oC,iBDHb,WAAYC,EAAUzB,EAAO0B,GAAU,oBACtCxC,KAAKyC,YAAYF,GACjBvC,KAAK0C,mBAAmBF,GACxBxC,KAAK2C,SAAS7B,G,kDAGTyB,EAAUzB,EAAO0B,GACtBxC,KAAKyC,YAAYF,GACjBvC,KAAK2C,SAAS7B,GACdd,KAAK4C,mBAAkB,GACvB5C,KAAK0C,mBAAmBF,K,0CAIxB,OAAOxC,KAAK6C,iB,wCAGKC,GACjB9C,KAAK6C,eAAiBC,I,2CAItB,OAAO9C,KAAK+C,kB,yCAEMD,GAClB9C,KAAK+C,gBAAkBD,I,oCAIvB,OAAO9C,KAAKuC,W,kCAGDA,GACXvC,KAAKuC,SAASA,EAEbvC,KAAK6C,eADU,MAAZN,I,iCAQJ,OAAOvC,KAAKc,Q,+BAGJA,GACRd,KAAKc,MAAQA,M,ME5CTkC,E,8GAOmBT,EAAUU,GACjC,IAAIC,EAAO,CAAC,SAAWX,EAAU,SAAWU,GAC5C,OAAOZ,EAAYX,KAAK1B,KAAKmD,0BAA2BD,K,gCAGxCrB,EAAUU,EAAUrC,EAAMkD,GAC1C,IAAIC,EAAyC,SAA7BxB,EAASqB,KAAT,QACZV,EAAqC,SAA3BX,EAASqB,KAAT,MACVpC,EAAQe,EAASqB,KAAT,IAIPhD,EAAKG,qBAAuBH,EAAKoD,aAAef,GAChDc,IACHD,EAAU,IAAIhB,EAAKG,EAAUzB,EAAO0B,IACpCH,EAAYkB,qCAAqCzC,M,iCAK/B0C,GACjBA,M,uCAIH,OAAmC,MAA5BxD,KAAKyD,MAAMC,gB,wCAIlB,OAAO1D,KAAKyD,MAAMjB,U,qCAGGD,GACrB,IAAIoB,EAAM3D,KAAK4D,0BAA4BrB,EAAW,UACtD,OAAOF,EAAYV,IAAIgC,K,iCAGNpB,EAAUsB,EAAWC,EAAUC,EAAOd,EAAUe,GACjE,IAAId,EAAO,CAAC,SAAYX,EAAU,UAAYsB,EAAW,SAAWC,EAAU,MAAQC,EAAO,SAAWd,EAAU,QAAU,CAAC,YAAc,GAAI,OAAS,UAAW,KAAO,UAAW,WAAc,UAAW,SAAY,UAAW,QAAW,WAChP,OAAOZ,EAAYX,KAAK1B,KAAKiE,wBAAyBf,K,0CAItD,OAAOlD,KAAKyD,MAAMS,iB,uCAIlB,OAAOlE,KAAKyD,MAAMU,gB,KAtDdnB,EAEEG,0BAA4B,oBAF9BH,EAGEoB,yBAA4B,mBAH9BpB,EAIEiB,wBAA0B,aAJ5BjB,EAKEY,0BAA4B,cAsDrBZ,QC5CAqB,EAjBf,uKAIE,OACC,6BACC,kBAAC,IAAD,CAAM7D,GAAG,WACR,uCAED,kBAAC,IAAD,CAAMA,GAAG,YACR,6CAVL,GAAuCC,aCiBxB6D,EAjBf,uKAIE,OACC,6BACC,kBAAC,IAAD,CAAM9D,GAAG,aACR,yCAED,kBAAC,IAAD,CAAMA,GAAG,UACR,2CAVL,GAAmCC,aCYpB8D,EAZf,uKAIE,OACC,kBAAC,IAAD,CAAM/D,GAAG,UACR,0CANJ,GAA+BC,aCMlB+D,EAAb,uKAGW,IAAD,EACgCxE,KAAKC,QAArCC,EADA,EACAA,KACFuE,GAFE,EACMtE,UADN,EACiBC,WACHF,EAAKG,oBAAsB,kBAAC,EAAD,MAAwB,kBAAC,EAAD,OACnEqE,EAAYxE,EAAKU,qBAAuB,kBAAC,EAAD,MAAgB,IAE9D,OAEC,yBAAK+D,GAAG,eAEP,4BACC,kBAAC,IAAD,CAAMnE,GAAG,KACR,qCAED,kBAAC,IAAD,CAAMA,GAAG,UACR,sCAED,kBAAC,IAAD,CAAMA,GAAG,kBACR,8CAEAiE,EACAC,QAvBN,GAA4BjE,aAAf+D,EACL9D,YAAcd,EAgCP4E,QChCAI,EARf,uKAEE,OACC,0CAHH,GAA4BnE,aCqCboE,E,WAnCd,WAAYC,EAAQ5C,EAAS6C,GAAM,oBAClC/E,KAAKgF,WAAW9C,GAChBlC,KAAKiF,UAAUH,GACf9E,KAAKkF,OAAOH,G,uDAIZ,OAAO/E,KAAK8E,S,gCAEHA,GACT9E,KAAK8E,OAASA,EAEb9E,KAAKmF,eADQ,MAAVL,I,mCAOJ,OAAO9E,KAAKkC,U,iCAEFA,GACVlC,KAAKkC,QAAQA,I,+BAGb,OAAOlC,KAAK+E,M,6BAENA,GACN/E,KAAK+E,IAAMA,I,0CAGX,OAAO/E,KAAKmF,mB,KCJCC,EA3Bf,kDAEC,WAAY9E,GAAQ,IAAD,8BAClB,cAAMA,IACD+E,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAFR,EAFpB,iEAQE,GAAKtF,KAAKM,MAAMiF,aAAaC,oBAI5BxF,KAAKM,MAAMmF,yBAJsC,CACjD,IAAIC,EAAc1F,KAAKM,MAAMJ,KAC7BF,KAAKM,MAAMqF,iBAAiB,IAAId,EAAa,UAAW,sBAAwBa,EAAa,OAVhG,+BAkBE,OACC,6BACC,yCAAkB,6BAClB,4BAAQE,QAAS5F,KAAKqF,oBAAtB,4BArBJ,GAA0B5E,aCOXoF,EARf,uKAEE,OACC,8CAHH,GAA2BpF,aCCrBqF,E,sLAKqBhB,EAAQ5C,EAAS6C,GAC1C,OAAO,IAAIF,EAAaC,EAAQ5C,EAAS6C,K,qDAGJxC,GACrC,IAAIuC,EAAS9E,KAAK+F,cACd7D,EAAU,WAAaK,EAAW,IAEtC,OAAOvC,KAAKqF,mBAAmBP,EAAQ5C,EAD7B,K,mDAIV,IAAI4C,EAAS9E,KAAKgG,aAGlB,OAAOhG,KAAKqF,mBAAmBP,EAFjB,kDACJ,K,4CAIkBvC,GAC5B,IAAIuC,EAAS9E,KAAK+F,cACd7D,EAAU,qBAAuBK,EAAW,IAEhD,OAAOvC,KAAKqF,mBAAmBP,EAAQ5C,EAD7B,K,4DAIkCK,GAC5C,IAAIuC,EAAS9E,KAAK+F,cACd7D,EAAU,oCAAsCK,EAAW,IAE/D,OAAOvC,KAAKqF,mBAAmBP,EAAQ5C,EAD7B,K,0DAKV,IAAI4C,EAAS9E,KAAKgG,aAGlB,OAAOhG,KAAKqF,mBAAmBP,EAFjB,8EACJ,O,GAvCsBrE,aAA5BqF,EAEEC,cAAgB,UAFlBD,EAGEE,aAAe,SA2CRF,Q,QCkFAG,E,uGA/HGC,EAAWC,GAC3B,OAAOD,EAAUE,eAChB,IAAK,WACJ,OAAOpG,KAAKqG,iBAAiBF,GAC9B,IAAK,YACJ,OAAOnG,KAAKsG,kBAAkBH,GAC/B,IAAK,WACJ,OAAOnG,KAAKuG,iBAAiBJ,GAC9B,IAAK,QACJ,OAAOnG,KAAKwG,cAAcL,GAC3B,IAAK,WACJ,OAAOnG,KAAKyG,iBAAiBN,GAC9B,IAAK,kBACJ,MAAO,GACR,IAAK,cACJ,OAAOnG,KAAK0G,oBAAoBP,GACjC,IAAK,SACJ,OAAOnG,KAAK2G,eAAeR,GAC5B,IAAK,OACJ,OAAOnG,KAAK4G,aAAaT,GAC1B,IAAK,aACJ,OAAOnG,KAAK6G,mBAAmBV,GAChC,IAAK,WACJ,OAAOnG,KAAK8G,iBAAiBX,GAC9B,IAAK,UACJ,OAAOnG,KAAK+G,gBAAgBZ,M,uCAIPa,GACvB,IAAIC,EAAS,GAIb,OAHID,EAASE,OAAS,IACrBD,GAAU,+CAEJA,I,wCAGiBE,GACxB,IAAIF,EAAS,GAIb,OAHIE,EAAUD,OAAS,IACtBD,GAAU,gDAEJA,I,uCAEgBG,GACvB,IAAIH,EAAS,GAIb,OAHIG,EAASF,OAAS,IACrBD,GAAU,gDAEJA,I,oCAGalD,GACpB,IAAIkD,EAAS,GAIb,OAHIlD,EAAMmD,OAAS,KAAOnD,EAAMsD,SAAS,OAAStD,EAAMsD,SAAS,QAChEJ,GAAU,kCAEJA,I,uCAGgBhE,GACvB,IAAIgE,EAAS,GAIb,OAHIhE,EAASiE,OAAS,IACrBD,GAAU,+CAEJA,I,4CAGqBhE,EAAUe,GACtC,IAAIiD,EAAS,GAIb,OAHIhE,GAAYe,IACfiD,GAAU,gCAEJA,I,0CAGmBK,GAE1B,MADa,K,qCAIQC,GACrB,IAAIN,EAAS,GAIb,OAHIM,EAAOL,OAAS,IACnBD,GAAU,6CAEJA,I,mCAGYO,GACnB,IAAIP,EAAS,GAIb,OAHIO,EAAKN,OAAS,IACjBD,GAAU,2CAEJA,I,yCAGkBQ,GACzB,IAAIR,EAAS,GAIb,OAHyB,GAArBQ,EAAWP,SACdD,GAAU,sCAEJA,I,uCAGgBS,GAEvB,MADa,K,sCAISC,GAEtB,MADa,K,8BAICC,EAAOC,GACrB,OAAID,EAAMV,OAAS,GAAKW,EAAWX,OAAS,M,KCpB/BY,EA/Ff,kDACC,WAAYxH,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZlB,SAAU,GACV4E,UAAW,GACXC,SAAU,GACVrD,MAAO,GACPd,SAAU,GACVe,gBAAiB,GAEjB+D,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,sBAAuB,IAGxB,EAAKC,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKgD,gBAAkB,EAAKA,gBAAgBhD,KAArB,gBACvB,EAAKiD,cAAgB,EAAKA,cAAcjD,KAAnB,gBApBH,EADpB,yDAwBckD,GACZ,IAAIC,EAAOD,EAAEE,OAAOD,KACpBzI,KAAK2I,SAAL,eAAgBF,EAAOD,EAAEE,OAAOE,QAEhC,IAAI3B,EAAShB,EAAkB4C,UAAUL,EAAEE,OAAOD,KAAMD,EAAEE,OAAOE,OAEvD,mBAANH,IACHxB,GAAUhB,EAAkB6C,sBAAsB9I,KAAKyD,MAAMR,SAAUuF,EAAEE,OAAOE,QAGjF,IAAIG,EAAYN,EAAO,SACvBzI,KAAK2I,SAAL,eAAgBI,EAAY9B,MAnC9B,wCAuCEjF,QAAQC,IAAI,yBAA2BjC,KAAKuI,iBACvCvI,KAAKuI,gBAITvG,QAAQC,IAAI,iBAHZD,QAAQC,IAAI,aACZjC,KAAKM,MAAMgI,gBAAgBtI,KAAKyD,MAAMlB,SAAUvC,KAAKyD,MAAM0D,UAAWnH,KAAKyD,MAAM2D,SAAUpH,KAAKyD,MAAMM,MAAO/D,KAAKyD,MAAMR,SAAUjD,KAAKyD,MAAMO,oBA1ChJ,sCAiDE,QAAIiC,EAAkB+C,QAAQhJ,KAAKyD,MAAMlB,SAAUvC,KAAKyD,MAAMsE,iBAAmB9B,EAAkB+C,QAAQhJ,KAAKyD,MAAMM,MAAO/D,KAAKyD,MAAMyE,cAAgBjC,EAAkB+C,QAAQhJ,KAAKyD,MAAMR,SAAUjD,KAAKyD,MAAM0E,iBAAmBlC,EAAkB+C,QAAQhJ,KAAKyD,MAAM2E,sBAAuBpI,KAAKyD,MAAM2E,0BAjD9S,+BA0DE,OAEC,6BACC,6CAEA,6BAAOpI,KAAKM,MAAM2I,cAAc,6BAE/BjJ,KAAKyD,MAAMsE,eAAe,6BAL5B,aAMW,6BACV,2BAAOmB,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAEvErI,KAAKyD,MAAMuE,gBAAgB,6BAT7B,eAUa,6BACZ,2BAAOkB,KAAK,OAAOT,KAAK,YAAYU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAExErI,KAAKyD,MAAMwE,eAAe,6BAb5B,aAcW,6BACV,2BAAOiB,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAEvErI,KAAKyD,MAAMyE,YAAY,6BAjBzB,UAkBQ,6BACP,2BAAOgB,KAAK,OAAOT,KAAK,QAAQU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAEpErI,KAAKyD,MAAM0E,eAAe,6BArB5B,aAsBW,6BACV,2BAAOe,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAEvErI,KAAKyD,MAAM2E,sBAAsB,6BAzBnC,qBA0BmB,6BAClB,2BAAOc,KAAK,OAAOT,KAAK,kBAAkBU,SAAUnJ,KAAKqI,eAAgB,6BAAM,6BAE/E,4BAAQzC,QAAS5F,KAAKsI,iBAAtB,iBAzFJ,GAA8B7H,aCmDfqH,EAjDf,kDACC,WAAYxH,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZ2F,cAAc,EACdH,cAAe,IAGhB,EAAKX,gBAAkB,EAAKA,gBAAgBhD,KAArB,gBAPL,EADpB,4DAWiB/C,EAAU4E,EAAWC,EAAUrD,EAAOd,EAAUe,GAAkB,IAAD,OAChFhB,EAAYqG,eAAe9G,GAC1BX,MAAK,SAACC,GACNG,QAAQC,IAAI,oBAAsBJ,EAASqB,MACtB,GAAjBrB,EAASqB,MAAkC,SAAjBrB,EAASqB,KAEtCF,EAAYsG,WAAW/G,EAAU4E,EAAWC,EAAUrD,EAAOd,EAAUe,GACtEpC,MAAK,SAACC,GACN,IAAI0D,EAAeO,EAAoByD,sCAAsChH,GAC7E,EAAKjC,MAAMqF,iBAAiBJ,GAC5B,EAAKoD,SAAS,CAACS,cAAc,OAC3BtH,OAAM,WACR,IAAIyD,EAAeO,EAAoB0D,oCACvC,EAAKlJ,MAAMqF,iBAAiBJ,MAI7B,EAAKoD,SAAS,CAACM,cAAe,0DAE7BnH,OAAM,SAAC0G,GACTxG,QAAQC,IAAIuG,EAAEtG,cA/BjB,+BAqCE,IAAMkH,EAAepJ,KAAKyD,MAAM2F,aAAe,kBAAC,IAAD,CAAU5I,GAAG,WAAc,GAE1E,OAEC,6BACE4I,EACD,kBAACK,EAAD,CAAkBnB,gBAAiBtI,KAAKsI,gBAAiBW,cAAejJ,KAAKyD,MAAMwF,qBA3CvF,GAA8BxI,aC8CfiJ,EA/Cf,kDAEC,WAAYpJ,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZlB,SAAU,KACVU,SAAU,KACVgE,OAAQ,CACP1E,SAAU,GACVU,SAAU,KAIZ,EAAKoF,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKqE,aAAe,EAAKA,aAAarE,KAAlB,gBAZF,EAFpB,yDAiBcsE,GACZ5J,KAAK2I,SAAL,eAAgBiB,EAAMlB,OAAOD,KAAOmB,EAAMlB,OAAOE,UAlBnD,qCAsBE5I,KAAKM,MAAMqJ,aAAa3J,KAAKyD,MAAMlB,SAAUvC,KAAKyD,MAAMR,YAtB1D,+BA2BE,IAAM8E,EAAiB/H,KAAKyD,MAAMwD,OAAO1E,SACnC4F,EAAiBnI,KAAKyD,MAAMwD,OAAOhE,SAEzC,OACC,6BACC,0CACCjD,KAAKM,MAAM2I,cACXlB,EACD,6BAAM,6BAJP,YAMC,2BAAOmB,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,eAAgB,6BACjEF,EAPF,YASC,2BAAOe,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,eAAgB,6BAClE,4BAAQzC,QAAS5F,KAAK2J,cAAtB,cAzCJ,GAA+BlJ,aCGzBoJ,E,kDAGL,WAAYvJ,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZ2F,cAAc,EACdH,cAAe,IAGhB,EAAKU,aAAe,EAAKA,aAAarE,KAAlB,gBAPF,E,yDAUN/C,EAAUU,GAAW,IAAD,OAChCD,EAAY8G,iBAAiBvH,EAAUU,GACtCrB,MAAK,SAACC,GAAY,IAAD,EACuB,EAAK5B,QAArCC,EADS,EACTA,KAAMC,EADG,EACHA,UADG,EACQC,WACzB4C,EAAY7C,UAAU0B,EAAUU,EAAUrC,EAAMC,GAChD,IAAIoF,EAAeO,EAAoBiE,+BAA+BxH,GACtE,EAAKjC,MAAMqF,iBAAiBJ,GAC5B,EAAKoD,SAAS,CAACS,cAAc,OAE3BtH,OAAM,WAER,EAAK6G,SACJ,CAACM,cAAe,+EAEjB,IAAI1D,EAAeO,EAAoBkE,6BACvC,EAAK1J,MAAMqF,iBAAiBJ,Q,+BAM7B,IAAM0E,EAAWjK,KAAKyD,MAAM2F,aAAe,kBAAC,IAAD,CAAU5I,GAAG,MAAS,IAEjE,OACC,6BACEyJ,EACD,kBAAC,EAAD,CAAWN,aAAc3J,KAAK2J,aAAcV,cAAejJ,KAAKyD,MAAMwF,qB,GAvCtDxI,aAAdoJ,EACEnJ,YAAcd,EA4CPiK,QChDFK,EAAb,uKAGW,IAAD,EAEgClK,KAAKC,QAArCC,EAFA,EAEAA,KAAiBE,GAFjB,EAEMD,UAFN,EAEiBC,YACzB4C,EAAY5C,WAAWA,GACvB,IAAImF,EAAeO,EAAoBqE,sBAAsBjK,EAAKoD,eAElE,OADAtD,KAAKM,MAAMqF,iBAAiBJ,GACrB,kBAAC,IAAD,CAAU/E,GAAG,UATtB,GAA4BC,aAAfyJ,EACLxJ,YAAcd,EAaPsK,QCmEAE,EApFf,kDAEC,WAAY9J,GAAQ,IAAD,gCAClB,cAAMA,IACDmD,OAAL,GACC0D,UAAW,GACXC,SAAU,GACVrD,MAAO,GACPuD,YAAa,GACbC,OAAQ,GACRC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,QAAS,GAETK,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,GACbmC,kBAAmB,GACnBC,aAAc,GACdC,WAAY,GACZC,iBAAkB,IAjBnB,2BAkBa,IAlBb,gCAmBkB,IAnBlB,8BAoBgB,IApBhB,GAuBA,EAAKnC,aAAe,EAAKA,aAAa/C,KAAlB,gBAzBF,EAFpB,yDA8BckD,GACZ,IAAIC,EAAOD,EAAEE,OAAOD,KACpBzI,KAAK2I,SAAL,eAAgBF,EAAOD,EAAEE,OAAOE,QAEhC,IAAI3B,EAAShB,EAAkB4C,UAAUL,EAAEE,OAAOD,KAAMD,EAAEE,OAAOE,OACjE5G,QAAQC,IAAI,gBAAkBgF,GAE9B,IAAI8B,EAAYN,EAAO,SACvBzI,KAAK2I,SAAL,eAAgBI,EAAY9B,MAtC9B,oCA0CEjF,QAAQC,IAAI,kBA1Cd,+BA+CE,OACC,6BAEEjC,KAAKyD,MAAMyE,YAAY,6BAFzB,SAIC,2BAAOgB,KAAK,OAAOT,KAAK,QAAQU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAK6D,QAAQ,6BAElG/D,KAAKyD,MAAM4G,kBAAkB,6BAN/B,gBAQC,2BAAOnB,KAAK,OAAOT,KAAK,cAAcU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQpD,cAAc,6BAEtHtH,KAAKyD,MAAM8D,OAAO,6BAVpB,eAYC,2BAAO2B,KAAK,OAAOT,KAAK,SAASU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQnD,SAAS,6BAE5GvH,KAAKyD,MAAM+D,KAAK,6BAdlB,eAgBC,2BAAO0B,KAAK,OAAOT,KAAK,OAAOU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQlD,OAAO,6BAExGxH,KAAKyD,MAAMgE,WAAW,6BAlBxB,eAoBC,2BAAOyB,KAAK,OAAOT,KAAK,cAAcU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQjD,aAAa,6BAErHzH,KAAKyD,MAAMiE,SAAS,6BAtBtB,YAwBC,2BAAOwB,KAAK,OAAOT,KAAK,WAAWU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQhD,WAAW,6BAEhH1H,KAAKyD,MAAMkE,QAAQ,6BA1BrB,WA4BC,2BAAOuB,KAAK,OAAOT,KAAK,UAAUU,SAAUnJ,KAAKqI,aAAcoC,aAAczK,KAAKM,MAAMJ,KAAKwK,QAAQ/C,UAAU,6BAE/G,4BAAQ/B,QAAS5F,KAAK2K,aAAtB,aA9EJ,GAAuClK,aCexBmK,EAdf,uKAKE,OACC,6BACC,4BAAK5K,KAAKM,MAAMJ,KAAKqC,SAArB,eACA,kBAAC,EAAD,CAAmBrC,KAAMF,KAAKM,MAAMJ,YARxC,GAAkCO,aCMnBoK,EARf,uKAEE,OACC,sDAHH,GAAqCpK,aCA/BqK,E,sGAIJ,OAAOzI,EAAYV,IAAI3B,KAAK+K,qB,yCAGJxI,GACxB,IAAIf,EAAcxB,KAAK+K,iBAAmB,IAAMxI,EAChD,OAAOF,EAAYV,IAAIH,O,KATnBsJ,EACEC,iBAAmB,aAaZD,QCVFE,EAAb,kDAGC,WAAY1K,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAM,CACVvD,KAAM,KACN+K,kBAAkB,EAClBC,kBAAkB,GAGnB,EAAKD,iBAAmB,EAAKA,iBAAiB3F,KAAtB,gBACxB,EAAK4F,iBAAmB,EAAKA,iBAAiB5F,KAAtB,gBATN,EAHpB,gEAesB,IAAD,OACXpF,EAASF,KAAKC,QAAdC,KACR4K,EAAYK,kBAAkBjL,EAAKoD,eAClC1B,MAAK,SAACC,GACN,EAAK8G,SAAS,CAACzI,KAAK2B,EAASqB,OAC7BlB,QAAQC,IAAIJ,EAASqB,SACnBpB,UArBL,yCA0BE,IAAIsJ,EAAepL,KAAKyD,MAAMwH,iBAC9BjL,KAAK2I,SAAS,CAAEsC,kBAAmBG,IACnCpL,KAAK2I,SAAS,CAAEuC,kBAAkB,MA5BpC,yCAgCE,IAAIE,EAAepL,KAAKyD,MAAMyH,iBAC9BlL,KAAK2I,SAAS,CAAEuC,kBAAmBE,IACnCpL,KAAK2I,SAAS,CAAEsC,kBAAkB,MAlCpC,+BAqCW,IACD/K,EAASF,KAAKC,QAAdC,KACFmL,EAAerL,KAAKyD,MAAMwH,iBAAmB,kBAAC,EAAD,CAAc/K,KAAMF,KAAKyD,MAAMvD,OAAU,GACtFoL,EAAetL,KAAKyD,MAAMyH,iBAAmB,kBAAC,EAAD,MAAsB,GAEzE,OACC,6BACC,4BAAKhL,EAAKoD,cAAV,oBACA,6BACC,4BAAQsC,QAAS5F,KAAKiL,kBAAtB,iBACA,4BAAQrF,QAAS5F,KAAKkL,kBAAtB,kBAEAG,EACAC,OAlDL,GAA6B7K,aAAhBuK,EACLtK,YAAcd,EAuDPoL,QCJA,O,WAtDd,aAAe,oBACdhL,KAAKuL,gBAAkB,oBACvBvL,KAAK+K,iBAAmB,aACxB/K,KAAKuC,SAAW,GAChBvC,KAAKwL,SAAW,GAChBxL,KAAKyL,YAAc,G,0DAInB,OAAOpJ,EAAYV,IAAI3B,KAAK+K,oB,uCAGZxI,GAChB,IAAMmJ,EAA2B1L,KAAK2L,uBAAuBpJ,GAE7D,OADAP,QAAQC,IAAIyJ,GACLrJ,EAAYV,IAAI+J,K,6CAGDnJ,GACtB,OAAOvC,KAAKuL,gBAAkBhJ,I,oCAGjBA,EAAUqJ,EAAMC,GAE7B,GADA7J,QAAQC,IAAI,mBACA,cAAR2J,EAAsB,CACzB,IAAI1I,EAAO,CAAC,SAAWX,EAAU,KAAO,aAAc,QAAUsJ,GAChE,OAAOxJ,EAAYF,IAAInC,KAAK2L,uBAAuBpJ,GAAWW,M,mCAInDX,EAAUqJ,EAAMC,GAE5B,GADA7J,QAAQC,IAAI,kBACA,aAAR2J,EAAqB,CACxB,IAAI1I,EAAO,CAAC,SAAWX,EAAU,KAAQ,YAAa,QAAUsJ,GAChE,OAAOxJ,EAAYF,IAAInC,KAAK2L,uBAAuBpJ,GAAWW,M,kCAIpDX,EAAUqJ,EAAMC,GAC3B,GAAe,QAAXA,EAAmB,CACtB,IAAI3I,EAAO,CAAC,SAAWX,EAAU,KAAQqJ,EAAM,QAAU,SACzD,OAAOvJ,EAAYF,IAAInC,KAAK2L,uBAAuBpJ,GAAWW,M,iCAIrDX,EAAUqJ,EAAMC,GAC1B,GAAe,SAAXA,EAAoB,CACvB,IAAI3I,EAAO,CAAC,SAAWX,EAAU,KAAQqJ,EAAM,QAAU,QACzD,OAAOvJ,EAAYF,IAAInC,KAAK2L,uBAAuBpJ,GAAWW,Q,MCsBlD4I,G,kDArEd,WAAYxL,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZlB,SAAU,GACV4E,UAAU,GACVC,SAAS,GACTrD,MAAM,GACN6H,KAAK,GACLC,QAAS,GAETE,oBAAoB,EACpB7H,eAAgB,6BAGjB,EAAK8H,cAAgB,EAAKA,cAAc1G,KAAnB,gBACrB,EAAK2G,aAAe,EAAKA,aAAa3G,KAAlB,gBACpB,EAAK4G,YAAc,EAAKA,YAAY5G,KAAjB,gBACnB,EAAK6G,WAAa,EAAKA,WAAW7G,KAAhB,gBAjBA,E,4DAoBF,IAAD,OACf8G,GAAaJ,cAAchM,KAAKM,MAAMJ,KAAKqC,SAAUvC,KAAKM,MAAMsL,KAAM5L,KAAKM,MAAMuL,SAChFjK,MAAK,SAACC,GACN,EAAKvB,MAAM+L,qBAAqBxK,EAASqB,KAAK0I,KAAM/J,EAASqB,KAAK2I,SAClE,EAAKlD,SAAS,CAACoD,oBAAmB,OAChCjK,OAAM,SAACC,GAASC,QAAQC,IAAIF,EAAMG,c,qCAEtB,IAAD,OACdkK,GAAaH,aAAajM,KAAKM,MAAMJ,KAAKqC,SAAUvC,KAAKM,MAAMsL,KAAM5L,KAAKM,MAAMuL,SAC/EjK,MAAK,SAACC,GACN,EAAKvB,MAAM+L,qBAAqBxK,EAASqB,KAAK0I,KAAM/J,EAASqB,KAAK2I,SAClE,EAAKlD,SAAS,CAACoD,oBAAmB,OAChCjK,U,oCAEW,IAAD,OACbsK,GAAaF,YAAYlM,KAAKM,MAAMJ,KAAKqC,SAAUvC,KAAKM,MAAMsL,KAAM5L,KAAKM,MAAMuL,SAC9EjK,MAAK,SAACC,GACN,EAAKvB,MAAM+L,qBAAqBxK,EAASqB,KAAK0I,KAAM/J,EAASqB,KAAK2I,SAClE,EAAKlD,SAAS,CAACoD,oBAAmB,OAChCjK,U,mCAEU,IAAD,OACZsK,GAAaD,WAAWnM,KAAKM,MAAMJ,KAAKqC,SAAUvC,KAAKM,MAAMsL,KAAM5L,KAAKM,MAAMuL,SAC7EjK,MAAK,SAACC,GACN,EAAKvB,MAAM+L,qBAAqBxK,EAASqB,KAAK0I,KAAM/J,EAASqB,KAAK2I,SAClE,EAAKlD,SAAS,CAACoD,oBAAmB,OAChCjK,U,+BAMH,IAAMoC,EAAiBlE,KAAKyD,MAAMsI,mBAAqB,4BAAI,4BAAK/L,KAAKyD,MAAMS,iBAA4B,GAEvG,OACC,6BACEA,EACD,4BACC,4BAAI,4BAAQ0B,QAAS5F,KAAKgM,eAAtB,eACJ,4BAAI,4BAAQpG,QAAS5F,KAAKiM,cAAtB,cACJ,4BAAI,4BAAQrG,QAAS5F,KAAKkM,aAAtB,YACJ,4BAAI,4BAAQtG,QAAS5F,KAAKmM,YAAtB,iB,GA/Dc1L,aC6ER2B,G,kDAzEd,WAAY9B,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZmI,KAAK,GACLC,QAAS,QACTS,cAAc,EACdC,kBAAkB,EAClBC,gBAAiB,OACjBC,SAAS,GAGV,EAAKH,aAAe,EAAKA,aAAahH,KAAlB,gBACpB,EAAK+G,qBAAuB,EAAKA,qBAAqB/G,KAA1B,gBAZV,E,gEAeE,IAAD,OAGnB8G,GAAaM,iBAAiB1M,KAAKM,MAAMJ,KAAKqC,UAC7CX,MAAK,SAACC,GACN,EAAKwK,qBAAqBxK,EAASqB,KAAK0I,KAAM/J,EAASqB,KAAK2I,YAE5D/J,OAAM,SAACC,GACPC,QAAQC,IAAI,yBACZD,QAAQC,IAAIF,EAAMG,c,qCAKflC,KAAKyD,MAAM6I,aACdtM,KAAK2I,SAAS,CAAC6D,gBAAgB,SAE/BxM,KAAK2I,SAAS,CAAC6D,gBAAgB,UAC9BxM,KAAK2I,SAAS,CAAC2D,cAAetM,KAAKyD,MAAM6I,iB,2CAGvBV,EAAMC,GAC1B,IAAgB,IAAZA,EACH,IAAIc,EAAkB,YAElBA,EAAkB,QAEvB3M,KAAK2I,SAAS,CAACiD,KAAKA,IACpB5L,KAAK2I,SAAS,CAACkD,QAAQc,M,+BAMvB,IAAMC,EAAW5M,KAAKyD,MAAM6I,aAAe,kBAAC,GAAD,CAAUpM,KAAMF,KAAKM,MAAMJ,KAAM0L,KAAM5L,KAAKyD,MAAMmI,KAAMC,QAAS7L,KAAKyD,MAAMoI,QAASQ,qBAAsBrM,KAAKqM,qBAAqB/G,KAAKtF,QAAY,IAGjM,OACC,6BACC,4BACC,4BAAKA,KAAKM,MAAMJ,KAAKqC,UACrB,4BAAKvC,KAAKM,MAAMJ,KAAKiH,WACrB,4BAAKnH,KAAKM,MAAMJ,KAAKkH,UACrB,4BAAKpH,KAAKM,MAAMJ,KAAK6D,OACrB,4BAAK/D,KAAKyD,MAAMmI,MAChB,4BAAK5L,KAAKyD,MAAMoI,SAChB,4BAAI,4BAAQjG,QAAS5F,KAAKsM,cAAetM,KAAKyD,MAAM+I,mBAEpDI,O,GAjEcnM,aCwBJoM,GA1Bf,uKAGE,IAAMC,EAAQ9M,KAAKM,MAAMwM,MAAMC,KAAI,SAAA7M,GAAI,OACrC,kBAAC,GAAD,CAAMA,KAAMA,OAGd,OACC,+BACC,8BACC,4BACC,wCACA,0CACA,yCACA,qCACA,oCACA,uCACA,8BAEA4M,QAnBN,GAA8BrM,aCafuM,G,uKAXb,OACC,4BACC,4BAAKhN,KAAKM,MAAM2M,OAAO9F,WACvB,4BAAKnH,KAAKM,MAAM2M,OAAO7F,UACvB,4BAAKpH,KAAKM,MAAM2M,OAAOlJ,Y,GAPNtD,aCqCNyM,G,kDAlCd,WAAY5M,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZ0J,QAAS,IAHQ,E,gEAOE,IAAD,OACnBlM,IAAMU,IAAI3B,KAAKM,MAAM8M,QAAQC,OAAOF,QAAQG,MAC1C1L,MAAK,SAACC,GAAD,OAAc,EAAK8G,SAAU,CAACwE,QAAStL,EAASqB,Y,+BAMvD,IAAMqK,EAAUvN,KAAKM,MAAM8M,QAAQI,QAAQD,QAAQR,KAAI,SAAAE,GAAM,OAC3D,kBAAC,GAAD,CAAQA,OAAQA,OAGlB,OACC,4BACC,4BAAKjN,KAAKyD,MAAM0J,QAAQM,WACxB,4BAAKzN,KAAKyD,MAAM0J,QAAQO,SACxB,4BAAK1N,KAAKyD,MAAM0J,QAAQQ,YACxB,4BAAK3N,KAAKM,MAAM8M,QAAQI,QAAQI,eAChC,4BAAK5N,KAAKM,MAAM8M,QAAQI,QAAQK,WAChC,4BAAKN,GACL,4BAAKvN,KAAKM,MAAM8M,QAAQI,QAAQM,W,GA5BdrN,aCyBPsN,GA1Bf,uKAGE,IAAMC,EAAWhO,KAAKM,MAAM0N,SAASjB,KAAI,SAAAK,GAAO,OAC9C,kBAAC,GAAD,CAASA,QAASA,OAGpB,OACC,+BACC,8BACC,4BACC,0CACA,wCACA,2CACA,6CACA,yCACA,uCACA,qCAEAY,QAnBN,GAAiCvN,aC+ClBwN,GA7Cf,kDACC,WAAY3N,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAQ,CACZqJ,MAAO,GACPkB,SAAU,GACVE,YAAa,IALI,EADpB,gEAUsB,IAAD,OACnB9B,GAAa+B,cACXvM,MAAK,SAACC,GACNG,QAAQC,IAAIJ,GACZ,EAAK8G,SAAS,CAACmE,MAAOjL,EAASqB,YAdnC,+BAyBE,OACC,6BAEC,0CAGA,6BACC,iDACA,kBAAC,GAAD,CAAU4J,MAAO9M,KAAKyD,MAAMqJ,SAP9B,MASI,oCACC,wCADD,OAEC,kBAAC,GAAD,CAAakB,SAAUhO,KAAKyD,MAAMuK,WAFnC,YAnCP,GAA2BvN,aCWZ2N,GAdf,kDACC,WAAY9N,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAM,GAFO,EADpB,qDAQE,OACC,sDATH,GAAmChD,aCEtB4N,ICFexO,IAAMC,gBDElC,kDAEC,WAAYQ,GAAQ,IAAD,8BAClB,cAAMA,IACDmD,MAAM,CACV0B,gBAAgB,GAHC,EAFpB,gEASsB,IAAD,OACnBnF,KAAKM,MAAMgO,QAAQC,QAAO,SAACC,EAAU1J,GAChC,EAAKxE,MAAMiF,aAAakJ,UAAY,EACvC,EAAKnO,MAAMmF,qBAEX,EAAKnF,MAAMiF,aAAaL,OAAO,EAAK5E,MAAMiF,aAAakJ,SAAS,QAdpE,+BAoBE,IAAMC,EAAmB1O,KAAKM,MAAMiF,aAAaC,oBAAsB,4BAAKxF,KAAKM,MAAMiF,aAAaoJ,cAAqB,GAEzH,OACC,6BACED,OAxBL,GAAqCjO,cA8BtBmO,eAAWP,IEkDXQ,G,uKAzDX,OAEI,kBAAC,IAAD,KAEE,gCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAiBtJ,aAAcvF,KAAKM,MAAMiF,aAAcE,mBAAoBzF,KAAKM,MAAMmF,sBAGzF,8BACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOqJ,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,kBACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,CAAcnJ,iBAAkB3F,KAAKM,MAAMqF,oBAG7C,kBAAC,EAAD,CAAgBpF,UAAWsJ,EAAOiF,KAAK,UACrC,kBAAC,EAAD,CAAOnJ,iBAAkB3F,KAAKM,MAAMqF,oBAGtC,kBAAC,EAAD,CAAoBpF,UAAW2J,EAAQ4E,KAAK,WAC1C,kBAAC,EAAD,CAAQnJ,iBAAkB3F,KAAKM,MAAMqF,oBAGvC,kBAAC,EAAD,CAAoBpF,UAAWyK,EAAS8D,KAAK,YAC3C,kBAAC,EAAD,OAGF,kBAAC,EAAD,CAAYvO,UAAW0N,GAAOa,KAAK,UACjC,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,CAAMvJ,aAAcvF,KAAKM,MAAMiF,aAAcE,mBAAoBzF,KAAKM,MAAMmF,mBAAoBE,iBAAkB3F,KAAKM,MAAMqF,sBAMnI,gCACE,kBAAC,EAAD,Y,GAnDOlF,aC4CJsO,G,kDAxDb,WAAYzO,GAAQ,IAAD,8BACjB,cAAMA,IACDmD,MAAQ,CACXvD,KAAM,IAAIkC,EAAK,KAAM,MAAM,GAC3BmD,aAAc,IAAIV,EAAa,KAAM,KAAM,OAG7C,EAAK1E,UAAY,EAAKA,UAAUmF,KAAf,gBACjB,EAAKlF,WAAa,EAAKA,WAAWkF,KAAhB,gBAClB,EAAKK,iBAAmB,EAAKA,iBAAiBL,KAAtB,gBACxB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAVT,E,sDAaTpF,GACRF,KAAK2I,SAAS,CAACzI,KAAKA,M,mCAIpBF,KAAK2I,SAAS,CAACzI,KAAM,IAAIkC,EAAK,KAAM,MAAM,O,uCAG3BmD,GACfvD,QAAQC,IAAI,oBACZD,QAAQC,IAAIsD,GACZvF,KAAK2I,SAAS,CAACpD,aAAcA,M,2CAG7BvF,KAAK2I,SAAS,CAACpD,aAAc,IAAIV,EAAa,KAAM,KAAM,U,+BAKxD,IAAM3E,EAAOF,KAAKyD,MAAMvD,KAClBC,EAAYH,KAAKG,UACjBC,EAAaJ,KAAKI,WAElBmF,EAAevF,KAAKyD,MAAM8B,aAC1BI,EAAmB3F,KAAK2F,iBACxBF,EAAqBzF,KAAKyF,mBAElC,OAEM,kBAAC,IAAMuJ,SAAP,KAEE,kBAAC,EAAYC,SAAb,CAAsBrG,MAAO,CAAC1I,OAAMC,YAAWC,eAE7C,kBAAC,GAAD,CAAMmF,aAAcA,EAAcI,iBAAkBA,EAAkBF,mBAAoBA,U,GA/CtFhF,aCCEyO,QACW,cAA7BC,OAAOX,SAASY,UAEe,UAA7BD,OAAOX,SAASY,UAEhBD,OAAOX,SAASY,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhO,MAAK,SAAAiO,GACJA,EAAaC,gBAEdhO,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMG,c","file":"static/js/main.eae9bf9c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport default UserContext;","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\n\r\nclass AuthenticatedRoute extends Component {\r\n\tstatic contextType = UserContext\r\n\r\n\trender() {\r\n\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\tif (user.getIsUserLoggedIn()) {\r\n\t\t\treturn <Route {...this.props} component={this.props.component} />\t\r\n\t\t}  else {\r\n\t\t\treturn <Redirect to=\"/login\" />\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AuthenticatedRoute;","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\n\r\nclass AdminRoute extends Component {\r\n\tstatic contextType = UserContext\r\n\r\n\trender() {\r\n\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\tif (user.getIsAdminLoggedIn()) {\r\n\t\t\treturn <Route {...this.props} component={this.props.component} />\t\r\n\t\t}  else {\r\n\t\t\treturn <Redirect to=\"/login\" />\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AdminRoute;","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\n\r\nclass AnonymousRoute extends Component {\r\n\tstatic contextType = UserContext\r\n\r\n\trender() {\r\n\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\tif (!user.getIsUserLoggedIn()) {\r\n\t\t\treturn <Route {...this.props} component={this.props.component} />\t\r\n\t\t}  else {\r\n\t\t\treturn <Redirect to=\"/\" />\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AnonymousRoute;","import axios from \"axios\";\r\n\r\nclass RestService {\r\n\r\n\tsetupAxiosAuthenticationInterceptors(token) {\r\n\t\tlet jwtToken = this.createJwtToken(token);\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers.authorization = jwtToken;\r\n                return config;\r\n            }\r\n        )\r\n    }\r\n\r\n\tsetupAxiosInitialInterceptors() {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                config.headers['Content-Type'] = \"application/json\";\r\n                return config;\r\n            }\r\n        )\r\n    }\r\n\r\n    post(apiEndpoint, jsonData) {\r\n    \treturn axios.post(apiEndpoint, jsonData);\r\n    }\r\n\r\n    get(apiEndpoint) {\r\n    \treturn axios.get(apiEndpoint)\r\n        .then((response)=>{return response})\r\n        .catch((error)=>{console.log(error.message)})\r\n    }\r\n\r\n    put(apiEndpoint, jsonData) {\r\n        return axios.put(apiEndpoint, jsonData);\r\n    }\r\n\r\n\tcreateJwtToken(token) {\r\n\t\treturn \"Bearer \" + token;\r\n\t}\r\n\r\n}\r\n\r\nexport default new RestService();","\r\n\r\nclass User {\r\n\tconstructor(username, token, isAdmin) {\r\n\t\tthis.setUsername(username);\r\n\t\tthis.setIsAdminLoggedIn(isAdmin);\r\n\t\tthis.setToken(token);\r\n\t}\r\n\r\n\tlogin(username, token, isAdmin) {\r\n\t\tthis.setUsername(username);\r\n\t\tthis.setToken(token);\r\n\t\tthis.setIsUserLoggedIn(true);\r\n\t\tthis.setIsAdminLoggedIn(isAdmin);\r\n\t}\r\n\r\n\tgetIsUserLoggedIn() {\r\n\t\treturn this.isUserLoggedIn;\r\n\t}\r\n\r\n\tsetIsUserLoggedIn(aBoolean) {\r\n\t\tthis.isUserLoggedIn = aBoolean;\r\n\t}\r\n\r\n\tgetIsAdminLoggedIn() {\r\n\t\treturn this.isAdminLoggedIn;\r\n\t}\r\n\tsetIsAdminLoggedIn(aBoolean) {\r\n\t\tthis.isAdminLoggedIn = aBoolean;\r\n\t}\r\n\r\n\tgetUsername() {\r\n\t\treturn this.username;\r\n\t}\r\n\t\r\n\tsetUsername(username) {\r\n\t\tthis.username=username;\r\n\t\tif (username != null) {\r\n\t\t\tthis.isUserLoggedIn = true;\r\n\t\t} else {\r\n\t\t\tthis.isUserLoggedIn = false;\r\n\t\t}\r\n\t}\r\n\r\n\tgetToken() {\r\n\t\treturn this.token;\r\n\t}\r\n\r\n\tsetToken(token) {\r\n\t\tthis.token = token;\r\n\t}\r\n}\r\n\r\nexport default User;","// import React from \"react\";\r\nimport RestService from \"./RestService\";\r\n\r\nclass ConfigService {\r\n\r\n\tinitialConfig() {\r\n\t\tRestService.setupAxiosInitialInterceptors();\r\n\t}\r\n\r\n}\r\n\r\nexport default new ConfigService();","import RestService from \"./RestService\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport User from \"../context/User\";\r\n\r\nclass AuthService {\r\n\r\n\tstatic authenticationApiEndpoint = \"/api/authenticate\";\r\n\tstatic authorizationApiEndpoint =  \"/api/authorities\";\r\n\tstatic registrationApiEndpoint = \"/api/users\";\r\n\tstatic usernameExistsApiEndpoint = \"/api/users/\";\r\n\r\n\tstatic authenticateUser(username, password) {\r\n\t\tlet data = {\"username\":username, \"password\":password};\r\n\t\treturn RestService.post(this.authenticationApiEndpoint, data);\r\n\t}\r\n\r\n\tstatic loginUser(response, username, user, loginFunc) {\t\r\n\t\tlet isEnabled = response.data[\"enabled\"] === \"true\";\r\n\t\tlet isAdmin = response.data[\"admin\"] === \"true\";\r\n\t\tlet token = response.data[\"jwt\"];\r\n\r\n\t\t// if user not already logged in\r\n\t\t// if user is enabled\r\n\t\tif (!user.getIsUserLoggedIn() && user.getUsername != username) {\r\n\t\t\tif (isEnabled) {\r\n\t\t\t\tloginFunc(new User(username, token, isAdmin));\r\n\t\t\t\tRestService.setupAxiosAuthenticationInterceptors(token);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    static logoutUser(logoutFunc) {\r\n    \tlogoutFunc();\r\n    }\r\n\r\n\tstatic isUserLoggedIn() {\r\n\t\treturn this.state.inMemoryToken != null ? true : false;\r\n\t}\r\n\r\n\tstatic isAdminLoggedIn() {\r\n\t\treturn this.state.isAdmin;\r\n\t}\r\n\r\n\tstatic usernameExists(username) {\r\n\t\tlet url = this.usernameExistsApiEndpoint + username + \"/exists\";\r\n\t\treturn RestService.get(url);\r\n\t} \r\n\r\n\tstatic createUser(username, firstname, lastname, email, password, confirmPassword) {\r\n\t\tlet data = {\"username\": username, \"firstName\":firstname, \"lastName\":lastname, \"email\":email, \"password\":password, \"address\":{\"houseNumber\":\"\", \"street\":\"default\", \"town\":\"default\", \"postalCode\": \"default\", \"province\": \"Ontario\", \"country\": \"Canada\"}};\r\n\t\treturn RestService.post(this.registrationApiEndpoint, data);\r\n\t}\r\n\r\n\tstatic getSuccessMessage() {\r\n\t\treturn this.state.successMessage;\r\n\t}\r\n\r\n\tstatic getFailMessage() {\r\n\t\treturn this.state.failMessage;\r\n\t}\r\n\r\n}\r\n\r\nexport default AuthService;","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class AuthenticatedNavs extends Component {\r\n\r\n\trender() {\r\n\r\n\t\treturn (\t\t\t\t\r\n\t\t\t<div>\t\r\n\t\t\t\t<Link to=\"/logout\">\r\n\t\t\t\t\t<li>Logout</li>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/account\">\r\n\t\t\t\t\t<li>Account</li>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default AuthenticatedNavs","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class AnonymousNavs extends Component {\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Link to=\"/register\">\r\n\t\t\t\t\t<li>Register</li>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t<li>Login</li>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default AnonymousNavs","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class AdminNavs extends Component {\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Link to=\"/admin\">\r\n\t\t\t\t<li>Admin</li>\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default AdminNavs","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport AuthService from \"../services/AuthService\";\r\nimport AuthenticatedNavs from \"./navs/AuthenticatedNavs\";\r\nimport AnonymousNavs from \"./navs/AnonymousNavs\";\r\nimport AdminNavs from \"./navs/AdminNavs\";\r\n\r\nimport UserContext from \"../context/UserContext\";\r\n\r\nexport class Navbar extends Component {\r\n\tstatic contextType = UserContext;\r\n\r\n\trender() {\r\n\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\tconst remainingNavs = user.getIsUserLoggedIn() ? <AuthenticatedNavs /> : <AnonymousNavs />;\r\n\t\tconst adminNavs = user.getIsAdminLoggedIn() ? <AdminNavs /> : \" \"; \r\n\r\n\t\treturn (\r\n\r\n\t\t\t<nav id=\"primary-nav\">\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t\t<li>Home</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/about\">\r\n\t\t\t\t\t\t<li>About</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to=\"/availabillity\">\r\n\t\t\t\t\t\t<li>Availabillity</li>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{remainingNavs}\r\n\t\t\t\t\t{adminNavs}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\r\n\r\n\t\t);\r\n\t}\r\n};\r\n// NavBar.contextType = AuthContext;\r\n\r\nexport default Navbar","import React, { Component } from \"react\";\r\n\r\nexport class Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>Footer</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Footer","\r\n\r\nclass Notification {\r\n\r\n\tconstructor(action, message, ttl) {\r\n\t\tthis.setMessage(message);\r\n\t\tthis.setAction(action);\r\n\t\tthis.setTTL(ttl);\r\n\t}\r\n\r\n\tgetAcion() {\r\n\t\treturn this.action;\r\n\t}\r\n\tsetAction(action) {\r\n\t\tthis.action = action;\r\n\t\tif (action != null) {\r\n\t\t\tthis.isNotification = true;\t\r\n\t\t} else {\r\n\t\t\tthis.isNotification = false;\r\n\t\t}\r\n\t}\r\n\tgetMessage() {\r\n\t\treturn this.message;\r\n\t}\r\n\tsetMessage(message) {\r\n\t\tthis.message=message;\r\n\t}\r\n\tgetTTL() {\r\n\t\treturn this.ttl;\r\n\t}\r\n\tsetTTL(ttl) {\r\n\t\tthis.ttl = ttl;\r\n\t}\r\n\tgetIsNotification() {\r\n\t\treturn this.isNotification;\r\n\t}\r\n\r\n}\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\r\nimport Notification from \"../context/Notification\";\r\n\r\nexport class Home extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.createNotification = this.createNotification.bind(this);\r\n\t} \r\n\r\n\tcreateNotification() {\r\n\t\tif (!this.props.notification.getIsNotification()) {\r\n\t\t\tlet currentUser = this.props.user;\r\n\t\t\tthis.props.sendNotification(new Notification(\"SUCCESS\", \"MADE A NOTI...WITH \" + currentUser, 2));\r\n\t\t} else {\r\n\t\t\tthis.props.removeNotification();\r\n\t\t}\t\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Home Page</h1><br></br>\r\n\t\t\t\t<button onClick={this.createNotification}>Create Notification</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nexport class About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>About Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport Notification from \"../context/Notification\";\r\n\r\nclass NotificationService extends Component {\r\n\r\n\tstatic successAction = \"SUCCESS\";\r\n\tstatic failedAction = \"FAILED\";\r\n\r\n\tstatic createNotification(action, message, ttl) {\r\n\t\treturn new Notification(action, message, ttl);\r\n\t}\r\n\r\n\tstatic getSuccessfulLoginNotification(username) {\r\n\t\tlet action = this.successAction;\r\n\t\tlet message = \"Welcome \" + username + \"!\";\r\n\t\tlet ttl = 1;\r\n\t\treturn this.createNotification(action, message, ttl);\r\n\t}\r\n\tstatic getFailedLoginNotification() {\r\n\t\tlet action = this.failedAction;\r\n\t\tlet message = \"Incorrect login information.  Please try again.\";\r\n\t\tlet ttl = 1;\r\n\t\treturn this.createNotification(action, message, ttl);\r\n\t}\r\n\r\n\tstatic getLogoutNotification(username) {\r\n\t\tlet action = this.successAction;\r\n\t\tlet message = \"See you next time \" + username + \"!\";\r\n\t\tlet ttl = 1;\r\n\t\treturn this.createNotification(action, message, ttl);\r\n\t}\r\n\r\n\tstatic getSuccessfulRegistrationNotification(username) {\r\n\t\tlet action = this.successAction;\r\n\t\tlet message = \"Account successfully created for \" + username + \"!\";\r\n\t\tlet ttl = 2;\r\n\t\treturn this.createNotification(action, message, ttl);\r\n\t}\r\n\r\n\tstatic getFailedRegistrationNotification() {\r\n\t\tlet action = this.failedAction;\r\n\t\tlet message = \"Incorrect registration information provided.  Please correct and try again.\";\r\n\t\tlet ttl = 1;\r\n\t\treturn this.createNotification(action, message, ttl);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nexport default NotificationService","\r\n\r\nclass ValidationService {\r\n\r\n\tstatic getErrors(inputName, inputValue) {\r\n\t\tswitch(inputName.toLowerCase()) {\r\n\t\t\tcase \"username\":\r\n\t\t\t\treturn this.validateUsername(inputValue);\r\n\t\t\tcase \"firstname\":\r\n\t\t\t\treturn this.validateFirstName(inputValue);\r\n\t\t\tcase \"lastname\":\r\n\t\t\t\treturn this.validateLastName(inputValue);\r\n\t\t\tcase \"email\":\r\n\t\t\t\treturn this.validateEmail(inputValue);\r\n\t\t\tcase \"password\":\r\n\t\t\t\treturn this.validatePassword(inputValue);\r\n\t\t\tcase \"confirmpassword\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"housenumber\":\r\n\t\t\t\treturn this.validateHouseNumber(inputValue);\r\n\t\t\tcase \"street\":\r\n\t\t\t\treturn this.validateStreet(inputValue);\r\n\t\t\tcase \"town\":\r\n\t\t\t\treturn this.validateTown(inputValue);\r\n\t\t\tcase \"postalcode\":\r\n\t\t\t\treturn this.validatePostalCode(inputValue);\r\n\t\t\tcase \"province\":\r\n\t\t\t\treturn this.validateProvince(inputValue);\r\n\t\t\tcase \"country\":\r\n\t\t\t\treturn this.validateCountry(inputValue);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic validateUsername(userName) {\r\n\t\tlet errors = \"\";\r\n\t\tif (userName.length < 3) {\r\n\t\t\terrors += \" username must be greater then 2 characters\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateFirstName(firstName) {\r\n\t\tlet errors = \"\";\r\n\t\tif (firstName.length < 2) {\r\n\t\t\terrors += \" first name must be greater then 1 character\"\r\n\t\t}\r\n\t\treturn errors;\t}\r\n\r\n\tstatic validateLastName(lastName) {\r\n\t\tlet errors = \"\";\r\n\t\tif (lastName.length < 3) {\r\n\t\t\terrors += \" last name must be greater then 2 characters\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\t\r\n\tstatic validateEmail(email) {\r\n\t\tlet errors = \"\";\r\n\t\tif (email.length < 11 || !email.includes(\"@\") || !email.includes(\".\")) {\r\n\t\t\terrors += \" please provide a valid email.\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\t\r\n\tstatic validatePassword(password) {\r\n\t\tlet errors = \"\";\r\n\t\tif (password.length < 7) {\r\n\t\t\terrors += \" password must be greater then 7 characters\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validatePasswordMatch(password, confirmPassword) {\r\n\t\tlet errors = \"\";\r\n\t\tif (password != confirmPassword) {\r\n\t\t\terrors += \"your passwords do not match.\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateHouseNumber(houseNumber) {\r\n\t\tlet errors = \"\";\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateStreet(street) {\r\n\t\tlet errors = \"\";\r\n\t\tif (street.length < 4) {\r\n\t\t\terrors += \" street must be greater then 3 characters\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateTown(town) {\r\n\t\tlet errors = \"\";\r\n\t\tif (town.length < 3) {\r\n\t\t\terrors += \" town must be greater then 2 characters\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validatePostalCode(postalCode) {\r\n\t\tlet errors = \"\";\r\n\t\tif (postalCode.length != 6) {\r\n\t\t\terrors += \" please enter a valid postal code.\"\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateProvince(province) {\r\n\t\tlet errors = \"\";\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic validateCountry(country) {\r\n\t\tlet errors = \"\";\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tstatic isValid(input, inputError) {\r\n\t\tif (input.length > 1 && inputError.length < 1) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\nexport default ValidationService;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ValidationService from \"../../services/ValidationService\";\r\n\r\n\r\nexport class Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\tconfirmPassword: \"\",\r\n\t\t\t\r\n\t\t\tusernameErrors: \"\",\r\n\t\t\tfirstNameErrors: \"\",\r\n\t\t\tlastNameErrors: \"\",\r\n\t\t\temailErrors: \"\",\r\n\t\t\tpasswordErrors: \"\",\r\n\t\t\tconfirmPasswordErrors: \"\"\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.registerClicked = this.registerClicked.bind(this);\r\n\t\tthis.disableButton = this.disableButton.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tlet name = e.target.name;\r\n\t\tthis.setState({[name]: e.target.value});\r\n\r\n\t\tlet errors = ValidationService.getErrors(e.target.name, e.target.value);\r\n\t\t\r\n\t\tif (name==\"confirmPassword\") {\r\n\t\t\terrors += ValidationService.validatePasswordMatch(this.state.password, e.target.value);\r\n\t\t}\r\n\r\n\t\tlet stateName = name + \"Errors\";\r\n\t\tthis.setState({[stateName]: errors});\r\n\t}\r\n\r\n\tregisterClicked() {\r\n\t\tconsole.log(\"disabledButton says...\" + this.disableButton());\r\n\t\tif (!this.disableButton()) {\r\n\t\t\tconsole.log(\"clicking!\");\r\n\t\t\tthis.props.registerClicked(this.state.username, this.state.firstName, this.state.lastName, this.state.email, this.state.password, this.state.confirmPassword);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"click denied\");\r\n\t\t}\r\n\t}\r\n\r\n\tdisableButton() {\r\n\t\tif (ValidationService.isValid(this.state.username, this.state.usernameErrors) && ValidationService.isValid(this.state.email, this.state.emailErrors) && ValidationService.isValid(this.state.password, this.state.passwordErrors) && ValidationService.isValid(this.state.confirmPasswordErrors, this.state.confirmPasswordErrors)) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t\t\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Register Page</h1>\r\n\r\n\t\t\t\t<br />{this.props.generalErrors}<br />\r\n\r\n\t\t\t\t{this.state.usernameErrors}<br />\r\n\t\t\t\tUsername: <br />\r\n\t\t\t\t<input type=\"text\" name=\"username\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.firstNameErrors}<br />\r\n\t\t\t\tFirst Name: <br />\r\n\t\t\t\t<input type=\"text\" name=\"firstName\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.lastNameErrors}<br />\r\n\t\t\t\tLast Name:<br />\r\n\t\t\t\t<input type=\"text\" name=\"lastName\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.emailErrors}<br />\r\n\t\t\t\tEmail: <br />\r\n\t\t\t\t<input type=\"text\" name=\"email\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.passwordErrors}<br />\r\n\t\t\t\tPassword: <br />\r\n\t\t\t\t<input type=\"text\" name=\"password\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.confirmPasswordErrors}<br />\r\n\t\t\t\tConfirm Password: <br />\r\n\t\t\t\t<input type=\"text\" name=\"confirmPassword\" onChange={this.handleChange} /><br /><br />\r\n\t\t\t\t\r\n\t\t\t\t<button onClick={this.registerClicked}>Register</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport NotificationService from \"../../services/NotificationService\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\n\r\n\r\nexport class Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowRedirect: false,\r\n\t\t\tgeneralErrors: \"\"\r\n\t\t}\r\n\r\n\t\tthis.registerClicked = this.registerClicked.bind(this);\r\n\t}\r\n\r\n\tregisterClicked(username, firstName, lastName, email, password, confirmPassword) {\r\n\t\tAuthService.usernameExists(username)\r\n\t\t.then((response)=>{\r\n\t\t\tconsole.log(\"response data is \" + response.data);\r\n\t\t\tif (response.data == false || response.data == \"false\") {\r\n\t\t\t\t\r\n\t\t\t\tAuthService.createUser(username, firstName, lastName, email, password, confirmPassword)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tlet notification = NotificationService.getSuccessfulRegistrationNotification(username);\r\n\t\t\t\t\tthis.props.sendNotification(notification);\r\n\t\t\t\t\tthis.setState({showRedirect: true});\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tlet notification = NotificationService.getFailedRegistrationNotification();\r\n\t\t\t\t\tthis.props.sendNotification(notification);\r\n\t\t\t\t});\r\n\t\t\r\n\t\t\t} else {\t\t\r\n\t\t\t\tthis.setState({generalErrors: \"Username is already in use. Please choose another.\"});\r\n\t\t\t}\r\n\t\t}).catch((e)=>{\r\n\t\t\tconsole.log(e.message);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst showRedirect = this.state.showRedirect ? <Redirect to=\"/login\" /> : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t{showRedirect}\r\n\t\t\t\t<RegistrationForm registerClicked={this.registerClicked} generalErrors={this.state.generalErrors}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Register;","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport NotificationService from \"../../services/NotificationService\";\r\nimport ValidationService from \"../../services/ValidationService\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\nexport class LoginForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: null,\r\n\t\t\tpassword: null,\r\n\t\t\terrors: {\r\n\t\t\t\tusername: \"\",\r\n\t\t\t\tpassword: \"\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.loginClicked = this.loginClicked.bind(this);\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tthis.setState({[event.target.name]: event.target.value});\r\n\t}\r\n\r\n\tloginClicked() {\r\n\t\tthis.props.loginClicked(this.state.username, this.state.password);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst usernameErrors = this.state.errors.username;\r\n\t\tconst passwordErrors = this.state.errors.password; \r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Login Page</h2>\r\n\t\t\t\t{this.props.generalErrors}\r\n\t\t\t\t{usernameErrors}\r\n\t\t\t\t<br /><br />\r\n\t\t\t\tUsername:\r\n\t\t\t\t<input type=\"text\" name=\"username\" onChange={this.handleChange} /><br />\r\n\t\t\t\t{passwordErrors}\r\n\t\t\t\tPassword:\r\n\t\t\t\t<input type=\"text\" name=\"password\" onChange={this.handleChange} /><br />\r\n\t\t\t\t<button onClick={this.loginClicked}>Login</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport NotificationService from \"../../services/NotificationService\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport Notification from \"../../context/Notification\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\n\r\nclass Login extends Component {\r\n\tstatic contextType = UserContext;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowRedirect: false,\r\n\t\t\tgeneralErrors: \"\"\r\n\t\t}\r\n\t\t\r\n\t\tthis.loginClicked = this.loginClicked.bind(this);\r\n\t}\r\n\r\n\tloginClicked(username, password) {\r\n\t\tAuthService.authenticateUser(username, password)\r\n\t\t.then((response)=>{\r\n\t\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\t\tAuthService.loginUser(response, username, user, loginUser);\r\n\t\t\tlet notification = NotificationService.getSuccessfulLoginNotification(username);\r\n\t\t\tthis.props.sendNotification(notification);\r\n\t\t\tthis.setState({showRedirect: true});\r\n\r\n\t\t}).catch(()=>{\r\n\r\n\t\t\tthis.setState(\r\n\t\t\t\t{generalErrors: \"username or password is incorrect.  Please check the inputs and try again.\"}\r\n\t\t\t\t);\r\n\t\t\tlet notification = NotificationService.getFailedLoginNotification();\r\n\t\t\tthis.props.sendNotification(notification);\r\n\t\t})\t\t\r\n\t\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst redirect = this.state.showRedirect ? <Redirect to=\"/\" /> : \" \";\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{redirect}\r\n\t\t\t\t<LoginForm loginClicked={this.loginClicked} generalErrors={this.state.generalErrors}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Login;","import React, { Component } from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport NotificationService from \"../services/NotificationService\";\r\n\r\nexport class Logout extends Component {\r\n\tstatic contextType = UserContext;\r\n\r\n\trender() {\r\n\r\n\t\tconst { user, loginUser, logoutUser } = this.context;\r\n\t\tAuthService.logoutUser(logoutUser);\r\n\t\tlet notification = NotificationService.getLogoutNotification(user.getUsername());\r\n\t\tthis.props.sendNotification(notification);\r\n\t\treturn <Redirect to=\"/\" />;\r\n\r\n\t}\r\n};\r\n\r\nexport default Logout;","import React, { Component } from \"react\";\r\nimport ValidationService from \"../../services/ValidationService\";\r\n\r\nexport class BasicUserSettings extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\thouseNumber: \"\",\r\n\t\t\tstreet: \"\",\r\n\t\t\ttown: \"\",\r\n\t\t\tpostalCode: \"\",\r\n\t\t\tprovince: \"\",\r\n\t\t\tcountry: \"\",\r\n\t\t\t\r\n\t\t\tfirstNameErrors: \"\",\r\n\t\t\tlastNameErrors: \"\",\r\n\t\t\temailErrors: \"\",\r\n\t\t\thouseNumberErrors: \"\",\r\n\t\t\tstreetErrors: \"\",\r\n\t\t\ttownErrors: \"\",\r\n\t\t\tpostalCodeErrors: \"\",\r\n\t\t\ttownErrors: \"\",\r\n\t\t\tprovinceErrrors: \"\",\r\n\t\t\tcountryErrors: \"\"\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tlet name = e.target.name;\r\n\t\tthis.setState({[name]: e.target.value});\r\n\r\n\t\tlet errors = ValidationService.getErrors(e.target.name, e.target.value);\r\n\t\tconsole.log(\"errors are...\" + errors);\r\n\r\n\t\tlet stateName = name + \"Errors\";\r\n\t\tthis.setState({[stateName]: errors});\r\n\t}\r\n\r\n\tsaveClicked() {\r\n\t\tconsole.log(\"save clicked\");\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t{this.state.emailErrors}<br />\r\n\t\t\t\tEmail:\r\n\t\t\t\t<input type=\"text\" name=\"email\" onChange={this.handleChange} defaultValue={this.props.user.email}/><br />\r\n\r\n\t\t\t\t{this.state.houseNumberErrors}<br />\r\n\t\t\t\tHouse Number:\r\n\t\t\t\t<input type=\"text\" name=\"houseNumber\" onChange={this.handleChange} defaultValue={this.props.user.address.houseNumber}/><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.street}<br />\r\n\t\t\t\tStreet Name:\r\n\t\t\t\t<input type=\"text\" name=\"street\" onChange={this.handleChange} defaultValue={this.props.user.address.street}/><br />\r\n\t\t\t\t\r\n\t\t\t\t{this.state.town}<br />\r\n\t\t\t\tTown / City:\r\n\t\t\t\t<input type=\"text\" name=\"town\" onChange={this.handleChange} defaultValue={this.props.user.address.town}/><br />\r\n\r\n\t\t\t\t{this.state.postalCode}<br />\r\n\t\t\t\tPostal Code:\r\n\t\t\t\t<input type=\"text\" name=\"postalCodde\" onChange={this.handleChange} defaultValue={this.props.user.address.postalCode}/><br />\r\n\r\n\t\t\t\t{this.state.province}<br />\r\n\t\t\t\tProvince:\r\n\t\t\t\t<input type=\"text\" name=\"province\" onChange={this.handleChange} defaultValue={this.props.user.address.province}/><br />\r\n\r\n\t\t\t\t{this.state.country}<br />\r\n\t\t\t\tCountry:\r\n\t\t\t\t<input type=\"text\" name=\"country\" onChange={this.handleChange} defaultValue={this.props.user.address.country}/><br />\r\n\r\n\t\t\t\t<button onClick={this.saveClicked}>Save</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default BasicUserSettings;","import React, { Component } from \"react\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport BasicUserSettings from \"./BasicUserSettings\";\r\n\r\nexport class UserSettings extends Component {\r\n\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5>{this.props.user.username}'s Settings</h5>\r\n\t\t\t\t<BasicUserSettings user={this.props.user} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default UserSettings;","import React, { Component } from \"react\";\r\n\r\nexport class UserGetawayList extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>User Getaways Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default UserGetawayList;","import RestService from \"./RestService\";\r\n\r\nclass UserService {\r\n\tstatic usersApiEndpoint = \"/api/users\";\r\n\r\n\tgetAllUsers() {\r\n\t\treturn RestService.get(this.usersApiEndpoint);\r\n\t}\r\n\r\n\tstatic getUserByUsername(username) {\r\n\t\tlet apiEndpoint = this.usersApiEndpoint + \"/\" + username;\r\n\t\treturn RestService.get(apiEndpoint);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default UserService;","import React, { Component } from \"react\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport UserSettings from \"./settings/UserSettings\";\r\nimport UserGetawayList from \"./getaways/UserGetawayList\";\r\nimport UserService from \"../services/UserService\";\r\n\r\nexport class Account extends Component {\r\n\tstatic contextType = UserContext;\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tuser: null,\r\n\t\t\tshowUserSettings: false,\r\n\t\t\tshowUserGetaways: false\r\n\t\t}\r\n\r\n\t\tthis.showUserSettings = this.showUserSettings.bind(this);\r\n\t\tthis.showUserGetaways = this.showUserGetaways.bind(this);\r\n\t} \r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { user } = this.context;\r\n\t\tUserService.getUserByUsername(user.getUsername())\r\n\t\t.then((response)=> {\r\n\t\t\tthis.setState({user:response.data});\r\n\t\t\tconsole.log(response.data);\r\n\t\t}).catch()\r\n\t}\r\n\r\n\r\n\tshowUserSettings() {\r\n\t\tlet currentState = this.state.showUserSettings;\r\n\t\tthis.setState({ showUserSettings: !currentState });\r\n\t\tthis.setState({ showUserGetaways: false });\r\n\t}\r\n\r\n\tshowUserGetaways() {\r\n\t\tlet currentState = this.state.showUserGetaways;\r\n\t\tthis.setState({ showUserGetaways: !currentState });\r\n\t\tthis.setState({ showUserSettings: false });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { user } = this.context;\r\n\t\tconst userSettings = this.state.showUserSettings ? <UserSettings user={this.state.user}/> : \"\";\r\n\t\tconst userGetaways = this.state.showUserGetaways ? <UserGetawayList /> : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{user.getUsername()}'s' Account Page</h1>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={this.showUserSettings}>User Settings</button>\r\n\t\t\t\t\t<button onClick={this.showUserGetaways}>User Getaways</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{userSettings}\r\n\t\t\t\t{userGetaways}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Account;","import RestService from \"./RestService\";\r\n\r\nclass AdminService {\r\n\r\n\tconstructor() {\r\n\t\tthis.roleApiEndpoint = \"/api/authorities/\";\r\n\t\tthis.usersApiEndpoint = \"/api/users\";\r\n\t\tthis.username = \"\";\r\n\t\tthis.userRole = \"\";\r\n\t\tthis.userEnabled = \"\";\r\n\t}\r\n\r\n\tgetAllUsers() {\r\n\t\treturn RestService.get(this.usersApiEndpoint);\r\n\t}\r\n\r\n\tgetUserAuthority(username) {\r\n\t\tconst userAuthorityApiEndpoint = this.getEditRoleApiEndpoint(username);\r\n\t\tconsole.log(userAuthorityApiEndpoint);\r\n\t\treturn RestService.get(userAuthorityApiEndpoint);\r\n\t}\r\n\r\n\tgetEditRoleApiEndpoint(username) {\r\n\t\treturn this.roleApiEndpoint + username;\r\n\t}\r\n\r\n\tmakeUserAdmin(username, role, enabled) {\r\n\t\tconsole.log(\"making admin...\");\r\n\t\tif (role != \"ROLE_ADMIN\") {\r\n\t\t\tlet data = {\"username\":username, \"role\":\"ROLE_ADMIN\", \"enabled\":enabled}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tmakeUserUser(username, role, enabled) {\r\n\t\tconsole.log(\"making user...\");\r\n\t\tif (role != \"ROLE_USER\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": \"ROLE_USER\", \"enabled\":enabled}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tdisableUser(username, role, enabled) {\r\n\t\tif (enabled == \"true\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": role, \"enabled\":\"false\"}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n\tenableUser(username, role, enabled) {\r\n\t\tif (enabled == \"false\") {\r\n\t\t\tlet data = {\"username\":username, \"role\": role, \"enabled\":\"true\"}\r\n\t\t\treturn RestService.put(this.getEditRoleApiEndpoint(username), data);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default new AdminService();","import React, { Component } from \"react\";\r\nimport AdminService from \"../../services/AdminService\";\r\n\r\nclass EditUser extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: \"\",\r\n\t\t\tfirstName:\"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\temail:\"\",\r\n\t\t\trole:\"\",\r\n\t\t\tenabled: \"\",\r\n\r\n\t\t\tshowSuccessMessage: false,\r\n\t\t\tsuccessMessage: \"Change Made Successfully!\"\r\n\t\t}\r\n\r\n\t\tthis.makeUserAdmin = this.makeUserAdmin.bind(this);\r\n\t\tthis.makeUserUser = this.makeUserUser.bind(this);\r\n\t\tthis.disableUser = this.disableUser.bind(this);\r\n\t\tthis.enableUser = this.enableUser.bind(this);\r\n\t}\r\n\r\n\tmakeUserAdmin() {\r\n\t\tAdminService.makeUserAdmin(this.props.user.username, this.props.role, this.props.enabled)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.props.updateAuthorityState(response.data.role, response.data.enabled);\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch((error)=>{console.log(error.message)})\r\n\t}\r\n\tmakeUserUser() {\r\n\t\tAdminService.makeUserUser(this.props.user.username, this.props.role, this.props.enabled)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.props.updateAuthorityState(response.data.role, response.data.enabled);\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\tdisableUser() {\r\n\t\tAdminService.disableUser(this.props.user.username, this.props.role, this.props.enabled)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.props.updateAuthorityState(response.data.role, response.data.enabled);\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\tenableUser() {\r\n\t\tAdminService.enableUser(this.props.user.username, this.props.role, this.props.enabled)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.props.updateAuthorityState(response.data.role, response.data.enabled);\r\n\t\t\tthis.setState({showSuccessMessage:true});\r\n\t\t}).catch()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst successMessage = this.state.showSuccessMessage ? <tr><td>{this.state.successMessage}</td></tr> : \"\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{successMessage}\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td><button onClick={this.makeUserAdmin}>Make Admin</button></td>\r\n\t\t\t\t\t<td><button onClick={this.makeUserUser}>Make User</button></td>\r\n\t\t\t\t\t<td><button onClick={this.disableUser}>Disable</button></td>\r\n\t\t\t\t\t<td><button onClick={this.enableUser}>Enable</button></td>\r\n\t\t\t\t</tr>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default EditUser;","import React, { Component } from \"react\";\r\nimport EditUser from \"./EditUser\";\r\nimport AdminService from \"../../services/AdminService\";\r\n\r\n\r\nclass User extends Component{\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trole:[],\r\n\t\t\tenabled: \"false\",\r\n\t\t\tshowEditUser: false,\r\n\t\t\tshowEditUserRole: false,\r\n\t\t\tavailableAction: \"Edit\",\r\n\t\t\tdisplay: false\r\n\t\t}\r\n\r\n\t\tthis.showEditUser = this.showEditUser.bind(this);\r\n\t\tthis.updateAuthorityState = this.updateAuthorityState.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// const authorityApiEndpoint = this.props.user.links.filter(link => link.rel == \"authority\").pop().href;\r\n\r\n\t\tAdminService.getUserAuthority(this.props.user.username)\r\n\t\t.then((response)=>{\r\n\t\t\tthis.updateAuthorityState(response.data.role, response.data.enabled);\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(\"Some Error Occured...\")\r\n\t\t\tconsole.log(error.message);\r\n\t\t})\r\n\t}\r\n\r\n\tshowEditUser() {\r\n\t\tif (this.state.showEditUser) {\r\n\t\t\tthis.setState({availableAction:\"Edit\"});\r\n\t\t} else {\r\n\t\t\tthis.setState({availableAction:\"Close\"});\r\n\t\t} this.setState({showEditUser: !this.state.showEditUser});\r\n\t}\r\n\r\n\tupdateAuthorityState(role, enabled) {\r\n\t\tif (enabled === true){\r\n\t\t\tvar responseEnabled = \"true\";\r\n\t\t} else {\r\n\t\t\tvar responseEnabled = \"false\";\r\n\t\t}\r\n\t\tthis.setState({role:role});\r\n\t\tthis.setState({enabled:responseEnabled});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst editUser = this.state.showEditUser ? <EditUser user={this.props.user} role={this.state.role} enabled={this.state.enabled} updateAuthorityState={this.updateAuthorityState.bind(this)} /> : \" \";\r\n\t\t// const cssDisplay = this.state.display ? \"display: block\" : \"display: none\";\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>{this.props.user.username}</td>\r\n\t\t\t\t\t<td>{this.props.user.firstName}</td>\r\n\t\t\t\t\t<td>{this.props.user.lastName}</td>\r\n\t\t\t\t\t<td>{this.props.user.email}</td>\r\n\t\t\t\t\t<td>{this.state.role}</td>\r\n\t\t\t\t\t<td>{this.state.enabled}</td>\r\n\t\t\t\t\t<td><button onClick={this.showEditUser}>{this.state.availableAction}</button></td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t{editUser}\r\n\t\t\t</div>\r\n\t\t\t// <div style={cssDisplay}>\r\n\t\t\t// \t<EditUser user={this.props.user} role={this.state.role} />\r\n\t\t\t// </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default User;","import React, { Component } from \"react\";\r\nimport User from \"./User\";\r\n\r\nexport class UserList extends Component {\r\n\trender() {\r\n\r\n\t\tconst users = this.props.users.map(user => \r\n\t\t\t\t<User user={user} />\r\n\t\t\t); \r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Username</th>\r\n\t\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Role</th>\r\n\t\t\t\t\t\t<th>Enabled</th>\r\n\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{users}\r\n\t\t\t\t</body>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default UserList;","import React, { Component } from \"react\";\r\n\r\nclass Member extends Component{\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{this.props.member.firstName}</td>\r\n\t\t\t\t<td>{this.props.member.lastName}</td>\r\n\t\t\t\t<td>{this.props.member.email}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Member;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Member from \"./Member\";\r\n\r\nclass Getaway extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbooking: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get(this.props.getaway._links.booking.href)\r\n\t\t\t.then((response) => this.setState( {booking: response.data} )\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tconst members = this.props.getaway.details.members.map(member => \r\n\t\t\t\t<Member member={member} />\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{this.state.booking.startDate}</td>\r\n\t\t\t\t<td>{this.state.booking.endDate}</td>\r\n\t\t\t\t<td>{this.state.booking.bookedDate}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.numOfVehicles}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.numOfPets}</td>\r\n\t\t\t\t<td>{members}</td>\r\n\t\t\t\t<td>{this.props.getaway.details.desc}</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Getaway;","import React, { Component } from \"react\";\r\nimport Getaway from \"./Getaway\";\r\n\r\nexport class GetawayList extends Component {\r\n\trender() {\r\n\r\n\t\tconst getaways = this.props.getaways.map(getaway => \r\n\t\t\t\t<Getaway getaway={getaway} />\r\n\t\t\t); \r\n\r\n\t\treturn (\r\n\t\t\t<table>\r\n\t\t\t\t<body>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Start Date</th>\r\n\t\t\t\t\t\t<th>End Date</th>\r\n\t\t\t\t\t\t<th>Booked Date</th>\r\n\t\t\t\t\t\t<th>numOfVehicles</th>\r\n\t\t\t\t\t\t<th>numOfCars</th>\r\n\t\t\t\t\t\t<th>Members</th>\r\n\t\t\t\t\t\t<th>desc</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{getaways}\r\n\t\t\t\t</body>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default GetawayList;","import React, { Component } from \"react\";\r\nimport AdminService from \"../services/AdminService\";\r\nimport UserList from \"./users/UserList\";\r\nimport GetawayList from \"./getaways/GetawayList\";\r\n\r\nexport class Admin extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusers: [],\r\n\t\t\tgetaways: [],\r\n\t\t\tauthorities: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tAdminService.getAllUsers()\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tthis.setState({users: response.data});\r\n\t\t\t});\r\n\t\t// axios.interceptors.response.use(res=>{console.log(res.request_header)});\r\n\t\t// axios.get(getawaysApiEndpoint)\r\n\t\t// \t.then((response) => this.setState({getaways: response.data._embedded.getaways}));\r\n\t\t// axios.get(authorityApiEndpoint)\r\n\t\t// \t.then((response) => this.setState({authorities: response.data._embedded.authorities}));\t\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const users = this.state.users.map(user => <p>{users.firstName}</p>);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<h1>Admin Page</h1>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Active Users Baby</h3>\r\n\t\t\t\t\t<UserList users={this.state.users}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t// <div>\r\n\t\t\t\t// \t<h3>Getaways</h3>\r\n\t\t\t\t// \t<GetawayList getaways={this.state.getaways} />\r\n\t\t\t\t// </div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Admin;","import React, { Component } from \"react\";\r\n\r\nexport class Availabillity extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>Availabillity Page</h1>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Availabillity;\r\n\r\n\r\n\r\n// 1. VISUAIZE AVAILABILLITY\r\n\r\n\t// ADMIN CAN CREATE SLOTS\r\n\t\t// SLOTS DEFINED BY START/END DATES\r\n\t\t// CAN BE \"BOOKED\" OR \"UNAVAILABLE\"\r\n\t// USERS CAN FILL SLOTS WITH GETAWAYS\r\n\t\t// USER CANS EDIT GETAWAYS\r\n\t\t// USERS MUST PAY DEPOSIT TO SAVE SLOT\r\n\r\n// 2. SELECT AVAILABILLITY SLOT\r\n\r\n// 3. CREATE GETAWAY\r\n\r\n// 4. PAY\r\n\r\n// 5. MAKE CHANGES ","import React, { Component } from \"react\";\r\nimport NotificationContext from \"../context/NotificationContext\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nexport class NotificationBar extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tisNotification: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.history.listen((location, action) => {\r\n\t\t\tif (this.props.notification.getTTL() <= 1) {\r\n\t\t\t\tthis.props.removeNotification();\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.notification.setTTL(this.props.notification.getTTL()-1);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst showNotification = this.props.notification.getIsNotification() ? <h5>{this.props.notification.getMessage()}</h5> : '';\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{showNotification}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default withRouter(NotificationBar);","import React from 'react';\r\n\r\nconst NotificationContext = React.createContext();\r\n\r\nexport default NotificationContext;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport AuthenticatedRoute from \"./authentication/routes/AuthenticatedRoute\";\r\nimport AdminRoute from \"./authentication/routes/AdminRoute\";\r\nimport AnonymousRoute from \"./authentication/routes/AnonymousRoute\";\r\nimport ConfigService from \"./services/ConfigService\";\r\nimport AuthService from \"./services/AuthService\";\r\n\r\nimport Navbar from \"./index/Navbar\";\r\nimport Footer from \"./index/Footer\";\r\nimport Home from \"./index/Home\";\r\nimport About from './about/About';\r\nimport Registration from \"./authentication/registration/Register\";\r\nimport Login from \"./authentication/login/Login\";\r\nimport Logout from \"./authentication/Logout\";\r\nimport Account from \"./account/Account\";\r\nimport Admin from \"./admin/Admin\";\r\nimport Availabillity from \"./availabillity/Availabillity\";\r\nimport NotificationBar from \"./notifications/NotificationBar\";\r\n\r\nimport UserContext from \"./context/UserContext\";\r\nimport NotificationContext from \"./context/NotificationContext\";\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return(\r\n\r\n        <Router>\r\n\r\n          <header>\r\n            <Navbar />\r\n            <NotificationBar notification={this.props.notification} removeNotification={this.props.removeNotification}/>\r\n          </header>\r\n\r\n          <body>\r\n            <Switch>\r\n                \r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n\r\n              <Route path=\"/availabillity\">\r\n                <Availabillity />\r\n              </Route>  \r\n\r\n              <Route path=\"/register\">\r\n                <Registration sendNotification={this.props.sendNotification}/>\r\n              </Route>\r\n\r\n              <AnonymousRoute component={Login} path=\"/login\" >\r\n                <Login sendNotification={this.props.sendNotification}/>\r\n              </AnonymousRoute>\r\n\r\n              <AuthenticatedRoute component={Logout} path=\"/logout\" >\r\n                <Logout sendNotification={this.props.sendNotification}/>\r\n              </AuthenticatedRoute>\r\n\r\n              <AuthenticatedRoute component={Account} path=\"/account\">\r\n                <Account />\r\n              </AuthenticatedRoute>\r\n\r\n              <AdminRoute component={Admin} path=\"/admin\">\r\n                <Admin />\r\n              </AdminRoute>   \r\n\r\n              <Route path=\"/\">\r\n                <Home notification={this.props.notification} removeNotification={this.props.removeNotification} sendNotification={this.props.sendNotification}/>\r\n              </Route>\r\n\r\n            </Switch>\r\n          </body>\r\n\r\n          <footer >\r\n            <Footer />\r\n          </footer>\r\n\r\n        </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport Main from \"./components/Main\";\nimport RestService from \"./components/services/RestService\";\nimport AuthService from \"./components/services/AuthService\";\n\nimport User from \"./components/context/User\";\nimport UserContext from \"./components/context/UserContext\";\nimport Notification from \"./components/context/Notification\";\nimport NotificationContext from \"./components/context/NotificationContext\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: new User(null, null, false),\n      notification: new Notification(null, null, null)\n    }\n\n    this.loginUser = this.loginUser.bind(this);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.sendNotification = this.sendNotification.bind(this);\n    this.removeNotification = this.removeNotification.bind(this);\n  }\n\n  loginUser(user) {\n    this.setState({user:user});\n  }\n\n  logoutUser() {\n    this.setState({user: new User(null, null, false)});\n  }\n\n  sendNotification(notification) {\n    console.log(\"got notification\");\n    console.log(notification);\n    this.setState({notification: notification})\n  }\n  removeNotification() {\n    this.setState({notification: new Notification(null, null, null)})\n  }\n\n  render() {\n      \n      const user = this.state.user;\n      const loginUser = this.loginUser;\n      const logoutUser = this.logoutUser;\n\n      const notification = this.state.notification;\n      const sendNotification = this.sendNotification;\n      const removeNotification = this.removeNotification;\n\n    return (\n\n          <React.Fragment >\n\n            <UserContext.Provider value={{user, loginUser, logoutUser}} >\n\n              <Main notification={notification} sendNotification={sendNotification} removeNotification={removeNotification}/>\n\n            </UserContext.Provider >\n\n          </React.Fragment >\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}